/*
if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'EnableDocumentUploadInParty' AND TABLE_NAME = 'SETTING')
ALTER TABLE SETTING ADD EnableDocumentUploadInParty TINYINT DEFAULT 0 WITH VALUES

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'EnableItemWiseCostCenter')
ALTER TABLE SETTING ADD EnableItemWiseCostCenter BIT NOT NULL DEFAULT 0 WITH VALUES

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'EnableAlternateItem')
ALTER TABLE SETTING ADD EnableAlternateItem BIT NOT NULL DEFAULT 0 WITH VALUES

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'MENUITEM' AND COLUMN_NAME = 'ItemCostCenter')
ALTER TABLE MENUITEM ADD ItemCostCenter FLOAT

IF OBJECT_ID('FK_MENUITEM_CostCenter') IS NULL AND OBJECT_ID('PK_TBLCOSTCENTER') IS NOT NULL AND EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'MENUITEM' AND COLUMN_NAME = 'ItemCostCenter')
ALTER TABLE MENUITEM ADD CONSTRAINT FK_MENUITEM_CostCenter FOREIGN KEY(ItemCostCenter) REFERENCES CostCenter(CCID)

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'LoadWholesaleRateinSalesOrder' AND  TABLE_NAME = 'SETTING')
ALTER TABLE SETTING ADD LoadWholesaleRateinSalesOrder TINYINT DEFAULT 0 WITH VALUES


IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'PRICEMODEINBILLING' AND  TABLE_NAME = 'SETTING')
ALTER TABLE SETTING ADD PRICEMODEINBILLING TINYINT DEFAULT 0 WITH VALUES
IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'PRIORITY' AND  TABLE_NAME = 'division')
alter table division add [PRIORITY] int

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'EnableItemWiseLocationMapping' AND  TABLE_NAME = 'SETTING')
ALTER TABLE SETTING ADD EnableItemWiseLocationMapping TINYINT DEFAULT 0 WITH VALUES

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'UserWiseWarehouse' AND  TABLE_NAME = 'SETTING')
ALTER TABLE SETTING ADD UserWiseWarehouse TINYINT DEFAULT 0 WITH VALUES

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'AdditionalInfoCompulsoryInPartyMaster' AND  TABLE_NAME = 'SETTING')
ALTER TABLE SETTING ADD AdditionalInfoCompulsoryInPartyMaster TINYINT DEFAULT 0 WITH VALUES

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'SalesmanCompulsoryInPartyMaster' AND  TABLE_NAME = 'SETTING')
ALTER TABLE SETTING ADD SalesmanCompulsoryInPartyMaster TINYINT DEFAULT 0 WITH VALUES

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'CategoryCompulsoryInPartyMaster' AND  TABLE_NAME = 'SETTING')
ALTER TABLE SETTING ADD CategoryCompulsoryInPartyMaster TINYINT DEFAULT 0 WITH VALUES

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'EnableWSRateInContratPrice' AND  TABLE_NAME = 'SETTING')
ALTER TABLE SETTING ADD EnableWSRateInContratPrice TINYINT DEFAULT 0 WITH VALUES

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'UserRightsWiseItemListing')
alter table SETTING add UserRightsWiseItemListing TINYINT DEFAULT 0 WITH VALUES

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'PrimarySchemeNo' AND TABLE_NAME = 'ABBPROD_SUMMARY')
alter table ABBPROD_SUMMARY add PrimarySchemeNo varchar(100)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'PrimarySchemeNo' AND TABLE_NAME = 'TRNPROD_SUMMARY')
alter table TRNPROD_SUMMARY add PrimarySchemeNo varchar(100)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'ORDERMODE' AND TABLE_NAME = 'ACCMAIN')
ALTER TABLE ACCMAIN ADD ORDERMODE VARCHAR(50)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'ORDERMODE' AND TABLE_NAME = 'PURMAIN')
ALTER TABLE PURMAIN ADD ORDERMODE VARCHAR(50)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'ORDERMODE' AND TABLE_NAME = 'INVMAIN')
ALTER TABLE INVMAIN ADD ORDERMODE VARCHAR(50)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'ORDERMODE' AND TABLE_NAME = 'AOPMAIN')
ALTER TABLE AOPMAIN ADD ORDERMODE VARCHAR(50)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'ORDERMODE' AND TABLE_NAME = 'OPMAIN')
ALTER TABLE OPMAIN ADD ORDERMODE VARCHAR(50)

if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'ProductSearchMode' AND TABLE_NAME = 'SETTING')
ALTER TABLE SETTING ADD ProductSearchMode TINYINT DEFAULT 0 WITH VALUES

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'RMD_TRNPROD_STATUS' and COLUMN_NAME = 'OtherUnitQty')
alter table RMD_TRNPROD_STATUS add OtherUnitQty decimal(12,4)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'EnableOtherUnitQtyInTI')
ALTER TABLE SETTING ADD EnableOtherUnitQtyInTI TINYINT DEFAULT 0 WITH VALUES

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'FilterIndexForCustomer')
ALTER TABLE SETTING ADD FilterIndexForCustomer TINYINT DEFAULT 0 WITH VALUES

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'CONTRACTPRICEMASTER' and COLUMN_NAME = 'PRICEMODE')
alter table CONTRACTPRICEMASTER add PRICEMODE int

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'EnableAssetModule')
ALTER TABLE SETTING ADD EnableAssetModule TINYINT DEFAULT 0 WITH VALUES

if not exists(select * from BILLINGMENU where MENUNAME = 'Partial Settlement Confirmation')
INSERT INTO BILLINGMENU(MENUNAME, PARENT, IMAGEPATH, FORMPATH, SHORTCUTKEY, DATACONTEXT, NEW, EDIT, [DELETE], [PRINT], EXPORT, MENUGROUP, DATACONTEXT_VTYPE, MENUINDEX, POST, HOLD, REPORTNAME, WINDOWTYPE, DISPLAYNAME) VALUES ('Partial Settlement Confirmation',	'System', NULL, NULL, NULL,	NULL, 0, 0,	0, 0, 0, 1,	0, 0.1,	NULL, NULL,	NULL, NULL,	NULL)

if not exists(select * from BILLINGMENU where MENUNAME = 'Pending Consumption List')
INSERT INTO BILLINGMENU(MENUNAME, PARENT, IMAGEPATH, FORMPATH, SHORTCUTKEY, DATACONTEXT, NEW, EDIT, [DELETE], [PRINT], EXPORT, MENUGROUP, DATACONTEXT_VTYPE, MENUINDEX, POST, HOLD, REPORTNAME, WINDOWTYPE, DISPLAYNAME) VALUES ('Pending Consumption List',	'System', NULL, NULL, NULL,	NULL, 0, 0,	0, 0, 0, 1,	0, 0.1,	NULL, NULL,	NULL, NULL,	NULL)			

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'receipeprod' and COLUMN_NAME = 'Yield')
alter table receipeprod add Yield numeric(8,2)

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'receipeprod' and COLUMN_NAME = 'SubItem')
alter table receipeprod add SubItem nvarchar(400)

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'receipeprod' and COLUMN_NAME = 'Entry_Qty')
alter table receipeprod add Entry_Qty numeric(5,2)

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'USERPROFILES' AND COLUMN_NAME = 'IsWaiter')
ALTER TABLE USERPROFILES ADD IsWaiter TINYINT DEFAULT 0 WITH VALUES

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'tblDocumentHeading')
BEGIN
CREATE TABLE [dbo].[tblDocumentHeading](
	[id] [int] IDENTITY(1,1) NOT NULL,
	[DocumentHeading] [varchar](50) NOT NULL,
	[status] [tinyint] NULL,
 CONSTRAINT [PK_RENTAL_DOCUMENTHEADING] PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'uploadfilenames')
BEGIN
CREATE TABLE [dbo].[uploadfilenames](
	[Acid] [varchar](100) NOT NULL,
	[DocHeadingId] [int] NULL,
	[FileName] [varchar](200) NULL,
	[FileExtension] [varchar](50) NULL,
	[Path] [varchar](200) NULL,
    [DocumentHeading] [varchar](100)
) ON [PRIMARY]

ALTER TABLE [dbo].[uploadfilenames]  WITH CHECK ADD FOREIGN KEY([DocHeadingId])
REFERENCES [dbo].[tblDocumentHeading] ([id])
END

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'MENUITEM_ALTITEM')
BEGIN
CREATE TABLE [dbo].[MENUITEM_ALTITEM](
	[ID] [numeric](18, 0) NOT NULL,
	[MCODE] [varchar](25) NULL,
	[ALTMCODE] [varchar](25) NULL,
 CONSTRAINT [PK_ALTITEM] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY];

ALTER TABLE [dbo].[MENUITEM_ALTITEM]  WITH CHECK ADD  CONSTRAINT [FK_MENUITEM_ALTITEM_MENUITEM] FOREIGN KEY([MCODE])
REFERENCES [dbo].[MENUITEM] ([MCODE]);

ALTER TABLE [dbo].[MENUITEM_ALTITEM] CHECK CONSTRAINT [FK_MENUITEM_ALTITEM_MENUITEM];

ALTER TABLE [dbo].[MENUITEM_ALTITEM]  WITH CHECK ADD  CONSTRAINT [FK_MENUITEM_ALTITEM_MENUITEM1] FOREIGN KEY([ALTMCODE])
REFERENCES [dbo].[MENUITEM] ([MCODE]);

ALTER TABLE [dbo].[MENUITEM_ALTITEM] CHECK CONSTRAINT [FK_MENUITEM_ALTITEM_MENUITEM1];
END

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'MENUITEM_USER')
BEGIN
CREATE TABLE [dbo].[MENUITEM_USER](
	[USER] [varchar](100) NULL,
	[MAINGROUP] [varchar](100) NULL,
	[ALIAS] [varchar](50) NOT NULL,
	[MCODE] [varchar](50) NULL
) ON [PRIMARY]
END


IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'MenuItem_Yield')
BEGIN
CREATE TABLE [dbo].[MenuItem_Yield](
	[MCODE] [varchar](25) NOT NULL,
	[SubItem] [varchar](200) NOT NULL,
	[Yield] [numeric](8, 2) NOT NULL,
	[UserName] [varchar](25) NOT NULL,
	[EDATE] [datetime] NOT NULL,
	[ISACTIVE] [tinyint] NOT NULL,
 CONSTRAINT [PK_MenuItem_Yield] PRIMARY KEY CLUSTERED 
(
	[MCODE] ASC,
	[SubItem] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]


ALTER TABLE [dbo].[MenuItem_Yield] ADD  CONSTRAINT [DF_MenuItem_Yield_ISACTIVE]  DEFAULT ((1)) FOR [ISACTIVE]

ALTER TABLE [dbo].[MenuItem_Yield]  WITH CHECK ADD  CONSTRAINT [FK_MenuItem_Yield_MenuItem] FOREIGN KEY([MCODE])
REFERENCES [dbo].[MENUITEM] ([MCODE])
ON DELETE CASCADE


ALTER TABLE [dbo].[MenuItem_Yield] CHECK CONSTRAINT [FK_MenuItem_Yield_MenuItem]
END

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = '_log_receipeprod' and COLUMN_NAME = 'ChoiceCount')
alter table _log_receipeprod add ChoiceCount tinyint

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = '_log_receipeprod' and COLUMN_NAME = 'Yield')
alter table _log_receipeprod add Yield numeric(8,2)

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = '_log_receipeprod' and COLUMN_NAME = 'SubItem')
alter table _log_receipeprod add SubItem nvarchar(400)

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = '_log_receipeprod' and COLUMN_NAME = 'Entry_Qty')
alter table _log_receipeprod add Entry_Qty numeric(5,2)

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'receipemain' and COLUMN_NAME = 'IsTakeAwayItem')
alter table receipemain add IsTakeAwayItem tinyint

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'receipeprod' and COLUMN_NAME = 'IsChoiceItem')
alter table receipeprod add IsChoiceItem tinyint default 0 with values

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'receipeprod' and COLUMN_NAME = 'ChoiceCount')
alter table receipeprod add ChoiceCount tinyint default 0 with values

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'receipemain' and COLUMN_NAME = 'ISACTIVE')
alter table receipemain add ISACTIVE int default 1 with values

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'TakeDefaultDate' AND TABLE_NAME = 'SETTING')
alter table SETTING ADD TakeDefaultDate TINYINT DEFAULT 0 WITH VALUES

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'EnablePartialDCInTI')
ALTER TABLE SETTING ADD EnablePartialDCInTI TINYINT DEFAULT 0 WITH VALUES

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'SorderRateUpateFromItmMaster')
ALTER TABLE SETTING ADD SorderRateUpateFromItmMaster TINYINT DEFAULT 0 WITH VALUES

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'MANUALSTOCKBATCH')
begin
CREATE TABLE [dbo].[MANUALSTOCKBATCH](
	[BATCH] [varchar](200) NULL,
	[DATE] [date] NULL,
	[ISACTIVE] [tinyint] NULL
) ON [PRIMARY]
ALTER TABLE [dbo].[MANUALSTOCKBATCH] ADD  DEFAULT ((1)) FOR [ISACTIVE]
end

IF NOT EXISTS(SELECT * FROM DATEMITI WHERE MITI = '01/01/2081')
insert into datemiti (AD, MITI) values ('2023-04-13','01/01/2081')

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'LOGPROD' and COLUMN_NAME = 'LocID')
alter table LOGPROD add LocID int

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'LOGPROD' and COLUMN_NAME = 'AssetID')
alter table LOGPROD add AssetID varchar(50)

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'LOGPROD' and COLUMN_NAME = 'BOOKVALUE')
alter table LOGPROD add BOOKVALUE numeric(18,3)

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'LOGPROD' and COLUMN_NAME = 'ALTCONFACTOR')
alter table LOGPROD add ALTCONFACTOR numeric(10,2)

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'LOGPROD' and COLUMN_NAME = 'ACID')
alter table LOGPROD add ACID varchar(25)

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'LOGPROD' and COLUMN_NAME = 'SL_ACID')
alter table LOGPROD add SL_ACID varchar(25)

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'LOGPROD' and COLUMN_NAME = 'UsefulLife')
alter table LOGPROD add UsefulLife tinyint

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'ENABLELATEPOSTINPURCHASE' AND TABLE_NAME = 'SETTING')
alter table SETTING ADD ENABLELATEPOSTINPURCHASE TINYINT DEFAULT 0 WITH VALUES

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'EnableTIEditInFullSOLoad' AND TABLE_NAME = 'SETTING')
ALTER TABLE SETTING ADD EnableTIEditInFullSOLoad TINYINT DEFAULT 0 WITH VALUES

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'EnableDeliveryChalan' AND TABLE_NAME = 'SETTING')
ALTER TABLE SETTING ADD EnableDeliveryChalan TINYINT DEFAULT 0 WITH VALUES

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'RATEDISCOUNT' AND TABLE_NAME = 'REQUISITION_ORDERPROD')
alter table REQUISITION_ORDERPROD add RATEDISCOUNT decimal(18,8)

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'SUPTYPE' AND TABLE_NAME = 'RMD_ACLIST')
ALTER TABLE RMD_ACLIST ADD SUPTYPE TINYINT DEFAULT 0 WITH VALUES

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'SendInvoiceEmail' AND TABLE_NAME = 'SETTING')
ALTER TABLE SETTING ADD SendInvoiceEmail TINYINT DEFAULT 0 WITH VALUES

if not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'RMD_TRNMAIN_ADDITIONALINFO' and COLUMN_NAME = 'MOBILE')
alter table RMD_TRNMAIN_ADDITIONALINFO add MOBILE varchar(30)

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'saveLogForThirdParty' AND TABLE_NAME = 'SETTING')
ALTER TABLE SETTING ADD saveLogForThirdParty TINYINT DEFAULT 0 WITH VALUES

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'USERPROFILES' AND COLUMN_NAME = 'AllowContractPriceBelowPRate')
ALTER TABLE USERPROFILES ADD AllowContractPriceBelowPRate TINYINT DEFAULT 0 WITH VALUES

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'USERPROFILES' AND COLUMN_NAME = 'FULLNAME')
ALTER TABLE USERPROFILES ADD FULLNAME VARCHAR(250)

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'EnableCreditLimitInSO')
ALTER TABLE SETTING ADD EnableCreditLimitInSO TINYINT DEFAULT 0 WITH VALUES

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_ACLIST' AND COLUMN_NAME = 'SALESMANID')
ALTER TABLE RMD_ACLIST ADD SALESMANID INT

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'MCAT' AND COLUMN_NAME = 'LEVEL')
ALTER TABLE MCAT ADD LEVEL VARCHAR(10)

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'UserSignature')
CREATE TABLE UserSignature
(
	VCHRNO VARCHAR(25) NOT NULL,
	USERSIGNATURE VARCHAR(MAX) 
)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'QUOTATION_PROD' AND COLUMN_NAME ='MasterMCode')
ALTER TABLE QUOTATION_PROD ADD MasterMCode VARCHAR(25)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'QUOTATION_SUMMARY' AND COLUMN_NAME ='MasterMCode')
ALTER TABLE QUOTATION_SUMMARY ADD MasterMCode VARCHAR(25)


IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'EnableDigitalSignature')
ALTER TABLE SETTING ADD EnableDigitalSignature TINYINT DEFAULT 0 WITH VALUES

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'SETTING' and COLUMN_NAME = 'DisableSalesOrderRateInTI')
alter table SETTING add DisableSalesOrderRateInTI TINYINT default 0 with values

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'DISCOUNT_RATE' and COLUMN_NAME = 'IntervalLimitBy')
alter table DISCOUNT_RATE add IntervalLimitBy TINYINT

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'DISCOUNT_RATE' and COLUMN_NAME = 'LimitIntervalReset')
alter table DISCOUNT_RATE add LimitIntervalReset TINYINT

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'DISCOUNT_RATE' and COLUMN_NAME = 'IntervalLimitQty')
alter table DISCOUNT_RATE add IntervalLimitQty NUMERIC(18,10)

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'DISCOUNT_RATE' and COLUMN_NAME = 'IntervalLimitAmount')
alter table DISCOUNT_RATE add IntervalLimitAmount NUMERIC(18,10)

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'PURMAIN_IMPORTDETAIL' and COLUMN_NAME = 'UNIT')
alter table PURMAIN_IMPORTDETAIL add UNIT VARCHAR(50)

if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'RMD_TRNMAIN_ADDITIONALINFO' and COLUMN_NAME = 'TermsAndConditionID')
alter table RMD_TRNMAIN_ADDITIONALINFO alter column TermsAndConditionID varchar(max)

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'RMD_ACLIST' and COLUMN_NAME = 'TERMSANDCONDITIONS')
alter table RMD_ACLIST add TERMSANDCONDITIONS varchar(max)

if not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'SETTING' and COLUMN_NAME = 'EnablePartyWiseTaxableBill')
alter table SETTING add EnablePartyWiseTaxableBill tinyint default 0 with values

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'EnableRateFromConsumption')
ALTER TABLE SETTING ADD EnableRateFromConsumption TINYINT DEFAULT 0 WITH VALUES

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'ADJUSTEXPIRY' AND TABLE_NAME = 'RMD_TRNMAIN_ADDITIONALINFO')
ALTER TABLE RMD_TRNMAIN_ADDITIONALINFO ADD ADJUSTEXPIRY tinyint default 0 with values

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'ISMEMBER' AND TABLE_NAME = 'Discount_Rate')
ALTER TABLE Discount_Rate ADD ISMEMBER tinyint default 0 with values

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'EnableCategoryAliasbasedCoding' AND TABLE_NAME = 'SETTING')
ALTER TABLE SETTING ADD EnableCategoryAliasbasedCoding tinyint default 0 with values

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'MCAT' and COLUMN_NAME = 'Alias')
alter table MCAT add Alias varchar(20)

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'MCAT' and COLUMN_NAME = 'uname')
alter table MCAT add uname varchar(50)

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'RMD_TRNMAIN_ADDITIONALINFO' and COLUMN_NAME = 'TAXABLE')
alter table RMD_TRNMAIN_ADDITIONALINFO add TAXABLE numeric(22, 10)

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'RMD_TRNMAIN_ADDITIONALINFO' and COLUMN_NAME = 'NONTAXABLE')
alter table RMD_TRNMAIN_ADDITIONALINFO add NONTAXABLE numeric(22, 10)

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'RMD_TRNMAIN_ADDITIONALINFO' and COLUMN_NAME = 'VATAMNT')
alter table RMD_TRNMAIN_ADDITIONALINFO add VATAMNT numeric(22, 10)

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'TAXABLE' AND TABLE_NAME = 'RMD_TRNMAIN_ADDITIONALINFO')
ALTER TABLE RMD_TRNMAIN_ADDITIONALINFO ADD TAXABLE NUMERIC(22,10)

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'NONTAXABLE' AND TABLE_NAME = 'RMD_TRNMAIN_ADDITIONALINFO')
ALTER TABLE RMD_TRNMAIN_ADDITIONALINFO ADD NONTAXABLE NUMERIC(22,10)

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'VATAMNT' AND TABLE_NAME = 'RMD_TRNMAIN_ADDITIONALINFO')
ALTER TABLE RMD_TRNMAIN_ADDITIONALINFO ADD VATAMNT NUMERIC(22,10)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'RATEDISCOUNT' AND TABLE_NAME = 'GRNPROD')
ALTER TABLE GRNPROD ADD	[RATEDISCOUNT] [decimal](18, 8) DEFAULT 0 WITH VALUES

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'RATEDISCOUNT' AND TABLE_NAME = 'RMD_ORDERPROD')
ALTER TABLE RMD_ORDERPROD ADD [RATEDISCOUNT] [decimal](18, 8) DEFAULT 0 WITH VALUES

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'RMD_TRNMAIN_ADDITIONALINFO' and COLUMN_NAME = 'SL_ACID')
alter table RMD_TRNMAIN_ADDITIONALINFO add SL_ACID varchar(25)

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'RMD_TRNMAIN_ADDITIONALINFO' and COLUMN_NAME = 'SL_ACNAME')
alter table RMD_TRNMAIN_ADDITIONALINFO add SL_ACNAME varchar(100)

if not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'PURTRAN' and COLUMN_NAME = 'SL_ACID')
alter table PURTRAN add SL_ACID varchar(25)

if not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'OPTRAN' and COLUMN_NAME = 'SL_ACID')
alter table OPTRAN add SL_ACID varchar(25)

if not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'INVTRAN' and COLUMN_NAME = 'SL_ACID')
alter table INVTRAN add SL_ACID varchar(25)

if not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'ACCTRAN' and COLUMN_NAME = 'SL_ACID')
alter table ACCTRAN add SL_ACID varchar(25)

if not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'TRNTRAN' and COLUMN_NAME = 'SL_ACID')
alter table TRNTRAN add SL_ACID varchar(25)

if not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'ABBTRAN' and COLUMN_NAME = 'SL_ACID')
alter table ABBTRAN add SL_ACID varchar(25)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'EnableAltUnitDiscOnRate' AND TABLE_NAME = 'SETTING')
ALTER TABLE SETTING ADD EnableAltUnitDiscOnRate tinyint default 0 with values


if not exists(select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'SMS_LOG')
CREATE TABLE SMS_LOG(
	[CustomerName] [varchar](30) NULL,
	[MOBILENO] [varchar](max) NULL,
	[MessageSend] [varchar](max) NULL,
	[MessageDate] [smalldatetime] NULL,
	[Status] [varchar](20) NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

if not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'SETTING' and COLUMN_NAME = 'ENABLE_SMS')
alter table SETTING add ENABLE_SMS tinyint default 0 with values

if not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'SETTING' and COLUMN_NAME = 'sms_setting')
alter table SETTING add sms_setting varchar(max)


IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'ApplytoDecimalinImportPurchaseTaxable')
ALTER TABLE SETTING ADD ApplytoDecimalinImportPurchaseTaxable TINYINT DEFAULT 0 WITH VALUES


if not exists(select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'tblUserwiseCostCenter')
	CREATE TABLE tblUserwiseCostCenter
	(	UNAME varchar(30) NULL,
	CCID int NULL,
	CCNAME varchar(50) NULL
	)
if not exists(select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'REPORTS')
CREATE TABLE REPORTS(
	[REPORT_NAME] [nvarchar](150) NOT NULL,
	[REPORT_TYPE] [nvarchar](150) NOT NULL,
	[REPORT_GROUP] [nvarchar](150) NULL,
	[REPORT_JSON] [nvarchar](max) NOT NULL,
	[USERNAME] [varchar](50) NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'CheckBarcodeLength' AND TABLE_NAME = 'SETTING')
ALTER TABLE SETTING ADD CheckBarcodeLength TINYINT DEFAULT 1 WITH VALUES

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'ECSAMOUNT' AND TABLE_NAME = 'QUOTATION_SUMMARY')
ALTER TABLE QUOTATION_SUMMARY ADD ECSAMOUNT NUMERIC(18,10)

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'ECSAMOUNT' AND TABLE_NAME = 'QUOTATION_PROD')
ALTER TABLE QUOTATION_PROD ADD ECSAMOUNT NUMERIC(18,10)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'RATEDISCOUNT' AND TABLE_NAME = 'RMD_ORDERPROD')
ALTER TABLE RMD_ORDERPROD ADD	[RATEDISCOUNT] [decimal](18, 8) DEFAULT 0 WITH VALUES

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'RATEDISCOUNT' AND TABLE_NAME = 'TRNPROD')
ALTER TABLE TRNPROD ADD	[RATEDISCOUNT] [decimal](18, 8) DEFAULT 0 WITH VALUES

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'RATEDISCOUNT' AND TABLE_NAME = 'PURPROD')
ALTER TABLE PURPROD ADD	[RATEDISCOUNT] [decimal](18, 8) DEFAULT 0 WITH VALUES

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'RATEDISCOUNT' AND TABLE_NAME = 'ABBPROD')
ALTER TABLE ABBPROD ADD	[RATEDISCOUNT] [decimal](18, 8) DEFAULT 0 WITH VALUES

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'RATEDISCOUNT' AND TABLE_NAME = 'INVPROD')
ALTER TABLE INVPROD ADD	[RATEDISCOUNT] [decimal](18, 8) DEFAULT 0 WITH VALUES

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'RATEDISCOUNT' AND TABLE_NAME = 'OPPROD')
ALTER TABLE OPPROD ADD	[RATEDISCOUNT] [decimal](18, 8) DEFAULT 0 WITH VALUES

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'RATEDISCOUNT' AND TABLE_NAME = 'QUOTATION_PROD')
ALTER TABLE QUOTATION_PROD ADD	[RATEDISCOUNT] [decimal](18, 8) DEFAULT 0 WITH VALUES

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'RATEDISCOUNT' AND TABLE_NAME = 'TRNPROD_SUMMARY')
ALTER TABLE TRNPROD_SUMMARY ADD	[RATEDISCOUNT] [decimal](18, 8) DEFAULT 0 WITH VALUES

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'RATEDISCOUNT' AND TABLE_NAME = 'PURPROD_SUMMARY')
ALTER TABLE PURPROD_SUMMARY ADD	[RATEDISCOUNT] [decimal](18, 8) DEFAULT 0 WITH VALUES

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'RATEDISCOUNT' AND TABLE_NAME = 'ABBPROD_SUMMARY')
ALTER TABLE ABBPROD_SUMMARY ADD	[RATEDISCOUNT] [decimal](18, 8) DEFAULT 0 WITH VALUES

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'RATEDISCOUNT' AND TABLE_NAME = 'INVPROD_SUMMARY')
ALTER TABLE INVPROD_SUMMARY ADD	[RATEDISCOUNT] [decimal](18, 8) DEFAULT 0 WITH VALUES


IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'RATEDISCOUNT' AND TABLE_NAME = 'OPPROD_SUMMARY')
ALTER TABLE OPPROD_SUMMARY ADD	[RATEDISCOUNT] [decimal](18, 8) DEFAULT 0 WITH VALUES

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'RATEDISCOUNT' AND TABLE_NAME = 'QUOTATION_SUMMARY')
ALTER TABLE QUOTATION_SUMMARY ADD	[RATEDISCOUNT] [decimal](18, 8) DEFAULT 0 WITH VALUES

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'EnableDiscountInAltUnit' AND TABLE_NAME = 'SETTING')
							ALTER TABLE SETTING ADD EnableDiscountInAltUnit tinyint default 0 with values

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'CONTRACTPRICEMASTER')
begin
CREATE TABLE [dbo].[CONTRACTPRICEMASTER](
[CMID] [int] NOT NULL,
[CUSTID] [varchar](25) NULL,
[CUSTNAME] [varchar](250) NULL,
[STARTDATE] [date] NOT NULL,
[ENDDATE] [date] NOT NULL,
[DISCOUNTTYPE] [varchar](10) NULL,
[STATUS] [tinyint] NULL,
[ISAPPROVED] [tinyint] NULL,
[CONTRACTPRICETYPE] [varchar](20) NULL,
[STAMP] [float] NULL,
[REFCMID] [varchar](20) NULL,
[REFCUSTNAME] [varchar](200) NULL,
[PRICENAME] [varchar](250) NULL,
PRIMARY KEY CLUSTERED 
(
[CMID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
ALTER TABLE [dbo].[CONTRACTPRICEMASTER] ADD  DEFAULT ((1)) FOR [STATUS]

ALTER TABLE [dbo].[CONTRACTPRICEMASTER] ADD  DEFAULT ((1)) FOR [ISAPPROVED]

ALTER TABLE [dbo].[CONTRACTPRICEMASTER]  WITH NOCHECK ADD FOREIGN KEY([CUSTID]
)
REFERENCES [dbo].[RMD_ACLIST] ([ACID])
end

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'DIVISION' AND COLUMN_NAME = 'COSTCENTER')
ALTER TABLE DIVISION ADD COSTCENTER VARCHAR(100)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'CONTRACTPRICEMASTER')
begin
CREATE TABLE [dbo].[CONTRACTPRICEMASTER](
[CMID] [int] NOT NULL,
[CUSTID] [varchar](25) NULL,
[CUSTNAME] [varchar](250) NULL,
[STARTDATE] [date] NOT NULL,
[ENDDATE] [date] NOT NULL,
[DISCOUNTTYPE] [varchar](10) NULL,
[STATUS] [tinyint] NULL,
[ISAPPROVED] [tinyint] NULL,
[CONTRACTPRICETYPE] [varchar](20) NULL,
[STAMP] [float] NULL,
[REFCMID] [varchar](20) NULL,
[REFCUSTNAME] [varchar](200) NULL,
[PRICENAME] [varchar](250) NULL,
PRIMARY KEY CLUSTERED 
(
[CMID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
ALTER TABLE [dbo].[CONTRACTPRICEMASTER] ADD  DEFAULT ((1)) FOR [STATUS]

ALTER TABLE [dbo].[CONTRACTPRICEMASTER] ADD  DEFAULT ((1)) FOR [ISAPPROVED]

ALTER TABLE [dbo].[CONTRACTPRICEMASTER]  WITH NOCHECK ADD FOREIGN KEY([CUSTID]
)
REFERENCES [dbo].[RMD_ACLIST] ([ACID])
end


IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'LicenseExpDate' AND TABLE_NAME = 'COMPANY')
ALTER TABLE COMPANY ADD LicenseExpDate smalldatetime

if not exists (SELECT * FROM SYS.triggers WHERE NAME = 'TRIGGER_FORMWISEPRINTFORMAT')
EXEC('create TRIGGER TRIGGER_FORMWISEPRINTFORMAT  ON formwiseprintformat after UPDATE,delete AS 
IF UPDATE (formname) 
rollback
else if update (filename)
rollback')

if not exists (SELECT * FROM SYS.triggers WHERE NAME = 'DELETETRIGGERFORMWISEPRINT')
EXEC('CREATE TRIGGER DELETETRIGGERFORMWISEPRINT  ON formwiseprintformat instead of delete
as
rollback')

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_WAREHOUSE' AND COLUMN_NAME = 'REFDIVISION')
ALTER TABLE RMD_WAREHOUSE ADD REFDIVISION varchar(3)

if not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'COMPANY' and COLUMN_NAME = 'LicenseExpDate')
alter table COMPANY add LicenseExpDate smalldatetime NULL

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'PRICENAME' AND TABLE_NAME = 'CONTRACTPRICEMASTER')
ALTER TABLE CONTRACTPRICEMASTER ADD PRICENAME VARCHAR(250)

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'CUSTID' AND TABLE_NAME = 'CONTRACTPRICEMASTER')
ALTER TABLE CONTRACTPRICEMASTER ALTER COLUMN CUSTID varchar(25) NULL

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'CUSTID' AND TABLE_NAME = 'CONTRACTPRICE')
ALTER TABLE CONTRACTPRICE ALTER COLUMN CUSTID varchar(25) NULL

if not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'menuitem' and COLUMN_NAME = 'guid')
alter table menuitem add guid [varchar](100) NULL

if not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'RMD_TRNMAIN_ADDITIONALINFO' and COLUMN_NAME = 'LoadWholeSaleRate')
alter table RMD_TRNMAIN_ADDITIONALINFO add LoadWholeSaleRate [tinyint] default 0 with values

if not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'USERPROFILES' and COLUMN_NAME = 'ShowDashboard')
alter table USERPROFILES add ShowDashboard tinyint default 0 with values

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'LoadWholesaleRateinProforma')
ALTER TABLE SETTING ADD LoadWholesaleRateinProforma TINYINT DEFAULT 0 WITH VALUES

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'AllowRateEditInTransferOut')
ALTER TABLE SETTING ADD AllowRateEditInTransferOut TINYINT DEFAULT 0 WITH VALUES

IF not exists(select *from INFORMATION_SCHEMA.TABLES  WHERE TABLE_NAME='DefaultReportFormat')
CREATE TABLE [dbo].[DefaultReportFormat](
	[DisplayName] [varchar](100) NULL,
	[ReportName] [varchar](100) NULL,
	[ProcName] [varchar](100) NULL,
 CONSTRAINT [UQ_ReportName] UNIQUE NONCLUSTERED 
(
	[ReportName] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]


if not exists(select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'PURPROD_NONTRADING')
begin
CREATE TABLE [dbo].[PURPROD_NONTRADING](
	[VCHRNO] [varchar](25) NOT NULL,
	[CHALANNO] [varchar](50) NULL,
	[DIVISION] [char](3) NOT NULL,
	[MCODE] [varchar](25) NULL,
	[UNIT] [varchar](20) NULL,
	[Quantity] [numeric](18, 3) NULL,
	[RealQty] [numeric](18, 3) NULL,
	[AltQty] [numeric](18, 3) NULL,
	[RATE] [decimal](20, 12) NULL,
	[AMOUNT] [numeric](20, 12) NULL,
	[DISCOUNT] [numeric](20, 12) NULL,
	[VAT] [numeric](20, 12) NULL,
	[REALRATE] [decimal](20, 12) NULL,
	[EXPORT] [tinyint] NULL,
	[IDIS] [varchar](100) NULL,
	[OPQTY] [numeric](18, 3) NULL,
	[REALQTY_IN] [numeric](18, 3) NULL,
	[ALTQTY_IN] [numeric](18, 3) NULL,
	[WAREHOUSE] [varchar](50) NULL,
	[REFBILLQTY] [numeric](18, 3) NULL,
	[SPRICE] [numeric](22, 12) NULL,
	[EXPDATE] [datetime] NULL,
	[REFOPBILL] [numeric](18, 0) NULL,
	[ALTUNIT] [varchar](15) NULL,
	[TRNAC] [varchar](25) NULL,
	[PRATE] [numeric](18, 2) NULL,
	[VRATE] [numeric](20, 12) NULL,
	[ALTRATE] [decimal](20, 12) NULL,
	[VPRATE] [numeric](15, 2) NULL,
	[VSRATE] [numeric](15, 2) NULL,
	[TAXABLE] [numeric](20, 12) NULL,
	[NONTAXABLE] [numeric](20, 12) NULL,
	[INVRATE] [numeric](18, 8) NULL,
	[EXRATE] [numeric](18, 2) NULL,
	[NCRATE] [numeric](18, 2) NULL,
	[CRATE] [numeric](18, 6) NULL,
	[SNO] [int] NULL,
	[CUSTOM] [numeric](18, 6) NULL,
	[WEIGHT] [numeric](18, 6) NULL,
	[DRATE] [numeric](18, 6) NULL,
	[CARTON] [numeric](18, 6) NULL,
	[INVOICENO] [varchar](50) NULL,
	[ISSUENO] [varchar](50) NULL,
	[BC] [varchar](50) NULL,
	[GENERIC] [varchar](50) NULL,
	[BATCH] [varchar](50) NULL,
	[MFGDATE] [datetime] NULL,
	[MANUFACTURER] [varchar](100) NULL,
	[SERVICETAX] [numeric](20, 12) NULL,
	[BCODEID] [numeric](18, 0) NULL,
	[VoucherType] [varchar](2) NOT NULL,
	[SALESMANID] [int] NULL,
	[PhiscalID] [varchar](20) NULL,
	[STAMP] [float] NULL,
	[ITEMDESC] [varchar](200) NULL,
	[DNID] [numeric](18, 0) NULL,
	[PROMOTION] [numeric](18, 8) NULL,
	[LOYALTY] [numeric](18, 8) NULL,
	[INDDISCOUNT] [numeric](18, 8) NULL,
	[FLATDISCOUNT] [numeric](18, 8) NULL,
	[NETAMOUNT] [numeric](18, 8) NULL,
	[ADDTIONALROW] [numeric](18, 8) NULL,
	[COSTCENTER] [varchar](100) NULL,
	[ISVAT] [tinyint] NULL,
	[PRODCONDITION] [varchar](20) NULL,
	[PRODMODE] [varchar](20) NULL,
	[ITEMTYPE] [varchar](20) NULL,
	[RECEIVEDTYPE] [varchar](20) NULL,
	[REMARKS] [varchar](255) NULL,
	[ISSERVICECHARGE] [tinyint] NULL,
	[SCHEMESAPPLIED] [varchar](200) NULL,
	[PrimaryDiscount] [numeric](18, 8) NULL,
	[SecondaryDiscount] [numeric](18, 8) NULL,
	[LiquiditionDiscount] [numeric](18, 8) NULL,
	[GSTRATE] [float] NULL,
	[INDDISCOUNTRATE] [float] NULL,
	[COMPANYID] [varchar](25) NULL,
	[MRP] [numeric](18, 5) NULL,
	[BASEQUANTITY] [numeric](18, 2) NULL,
	[ALTERNATEQUANTIY] [numeric](18, 2) NULL,
	[BASEUNIT] [varchar](100) NULL,
	[ALTERNATEUNIT] [varchar](100) NULL,
	[ALTCONFACTOR] [numeric](10, 2) NULL,
	[isApproved] [tinyint] NULL,
	[QpsDiscount] [numeric](9, 2) NULL,
	[ECSAMOUNT] [numeric](18, 8) NULL,
	[guid] [varchar](100) NULL,
	[BATCHID] [varchar](50) NULL
) ON [PRIMARY]

ALTER TABLE [dbo].[PURPROD_NONTRADING] ADD  DEFAULT ((0)) FOR [ECSAMOUNT]
ALTER TABLE [dbo].[PURPROD_NONTRADING]  WITH CHECK ADD  CONSTRAINT [FK_PURPROD_NONTRADING_COMPANY] FOREIGN KEY([COMPANYID])
REFERENCES [dbo].[COMPANY] ([COMPANYID])
ALTER TABLE [dbo].[PURPROD_NONTRADING] CHECK CONSTRAINT [FK_PURPROD_NONTRADING_COMPANY]
ALTER TABLE [dbo].[PURPROD_NONTRADING]  WITH CHECK ADD  CONSTRAINT [FK_PURPROD_NONTRADING_TABLE_SUMMARY_PURMAIN] FOREIGN KEY([VCHRNO], [VoucherType])
REFERENCES [dbo].[PURMAIN] ([VCHRNO], [VoucherType])
ALTER TABLE [dbo].[PURPROD_NONTRADING] CHECK CONSTRAINT [FK_PURPROD_NONTRADING_TABLE_SUMMARY_PURMAIN]

ALTER TABLE [dbo].[PURPROD_NONTRADING]  WITH NOCHECK ADD  CONSTRAINT [FK_RMD_PURPROD_NONTRADING_TABLE_SUMMARY_RMD_WAREHOUSE] FOREIGN KEY([WAREHOUSE])
REFERENCES [dbo].[RMD_WAREHOUSE] ([NAME])

ALTER TABLE [dbo].[PURPROD_NONTRADING] CHECK CONSTRAINT [FK_RMD_PURPROD_NONTRADING_TABLE_SUMMARY_RMD_WAREHOUSE]

ALTER TABLE [dbo].[PURPROD_NONTRADING]  WITH NOCHECK ADD  CONSTRAINT [FK_RMD_PURPRODNONTRADING_TABLE_SUMMARY_MENUITEM] FOREIGN KEY([MCODE])
REFERENCES [dbo].[MENUITEM] ([MCODE])

ALTER TABLE [dbo].[PURPROD_NONTRADING] CHECK CONSTRAINT [FK_RMD_PURPRODNONTRADING_TABLE_SUMMARY_MENUITEM]
end


if not exists (select * from INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'DispatchWiseLoadSheet' AND TABLE_NAME = 'SETTING')
alter table setting add DispatchWiseLoadSheet tinyint DEFAULT 0 WITH VALUES

if not exists (select * from INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'description' AND TABLE_NAME = 'roleuserright')
alter table roleuserright add description varchar(500)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'ISAMOUNTWISEBILL' AND TABLE_NAME = 'MENUITEM')
ALTER TABLE MENUITEM ADD ISAMOUNTWISEBILL INT DEFAULT 0 WITH VALUES

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'EnableWebBilling')
ALTER TABLE SETTING ADD EnableWebBilling TINYINT DEFAULT 0 WITH VALUES

if not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'USERPROFILES' and COLUMN_NAME = 'DirectToAccounting')
alter table USERPROFILES add DirectToAccounting tinyint default 0 with values

if exists(select * from information_schema.columns where table_name = 'contractpricemaster' and column_name = 'CUSTNAME')
alter table contractpricemaster alter column CUSTNAME VARCHAR(250)

if not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'OPPROD_SUMMARY' and COLUMN_NAME = 'ECSAMOUNT')
alter table OPPROD_SUMMARY add ECSAMOUNT numeric(18,8)

if not exists(select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'MenuDependency')
create table MenuDependency
(
	Menu varchar(250),
	DependencySetting varchar(250)
)


if not exists(select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'LOG_LOADCHART')
CREATE TABLE [dbo].[LOG_LOADCHART](
	[VOUCHERNO] [nvarchar](200) NOT NULL,
	[DATE] [datetime] NULL,
	[DIVISION] [nvarchar](50) NULL,
	[VEHICLENO] [nvarchar](50) NULL,
	[DRIVERNAME] [nvarchar](500) NULL,
	[DRIVERLISCENSENO] [nvarchar](50) NULL,
	[SALESMANNAME] [nvarchar](500) NULL,
	[ROUTENO] [nvarchar](500) NULL,
	[TOTALWEIGHT] [decimal](10, 2) NULL,
	[TOTALNUMBEROFBILLS] [decimal](5, 0) NULL,
	[TOTALTAXABLE] [decimal](20, 5) NULL,
	[TOTALAMOUNT] [decimal](20, 5) NULL,
	[PHISCALID] [nchar](10) NULL,
	[BILLTYPE] [nchar](10) NULL,
	[TRANSPORTNAME] [varchar](500) NULL,
	[REMARKS] [varchar](500) NULL,
	[GUID] [nchar](100) NULL,
	[TOTALQUANTITY] [numeric](18, 2) NULL,
	[TOTALREMANINGQTY] [numeric](18, 2) NULL,
	[TOTALACTUALQTY] [numeric](18, 2) NULL
) ON [PRIMARY]

if not exists(select * from information_schema.columns where table_name = 'LOG_LOADCHART' and column_name = 'User')
alter table LOG_LOADCHART add [User] varchar(50)

if not exists(select * from information_schema.columns where table_name = 'LOG_LOADCHART' and column_name = 'ENTRYDATE')
alter table LOG_LOADCHART add ENTRYDATE datetime


IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRNMAIN' AND COLUMN_NAME = 'DATA_ORIGIN')
ALTER TABLE TRNMAIN ADD DATA_ORIGIN VARCHAR(20) NULL

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ABBMAIN' AND COLUMN_NAME = 'DATA_ORIGIN')
ALTER TABLE ABBMAIN ADD DATA_ORIGIN VARCHAR(20) NULL

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'INVMAIN' AND COLUMN_NAME = 'DATA_ORIGIN')
ALTER TABLE INVMAIN ADD DATA_ORIGIN VARCHAR(20) NULL

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'PURMAIN' AND COLUMN_NAME = 'DATA_ORIGIN')
ALTER TABLE PURMAIN ADD DATA_ORIGIN VARCHAR(20) NULL

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ACCMAIN' AND COLUMN_NAME = 'DATA_ORIGIN')
ALTER TABLE ACCMAIN ADD DATA_ORIGIN VARCHAR(20) NULL

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'OPMAIN' AND COLUMN_NAME = 'DATA_ORIGIN')
ALTER TABLE OPMAIN ADD DATA_ORIGIN VARCHAR(20) NULL

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AOPMAIN' AND COLUMN_NAME = 'DATA_ORIGIN')
ALTER TABLE AOPMAIN ADD DATA_ORIGIN VARCHAR(20) NULL

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_ACLIST' AND COLUMN_NAME = 'CONTRACTPRICEID')
ALTER TABLE RMD_ACLIST ADD CONTRACTPRICEID INT

if not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'SETTING' and COLUMN_NAME = 'EnableECSAccounting')
alter table SETTING add EnableECSAccounting tinyint default 0 with values

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'setting' and COLUMN_NAME = 'showLaserPintInTi')
alter table setting add showLaserPintInTi tinyint default 0 with values 

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'SETTING' and COLUMN_NAME = 'ValidatePanNumber')
alter table SETTING add ValidatePanNumber tinyint default 0 with values

IF not EXISTS(select * from information_schema.columns where table_name = 'setting' and column_name = 'EnableAmountWiseBill')
alter table SETTING add EnableAmountWiseBill int default 0 with values

IF not EXISTS(Select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'receivelog' and COLUMN_NAME = 'VCHRNO')
alter table receivelog add VCHRNO varchar(50)

IF not EXISTS(Select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'receivelog' and COLUMN_NAME = 'CollectionMode')
alter table receivelog add CollectionMode varchar(50)

IF not EXISTS(Select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'USERPROFILES' and COLUMN_NAME = 'FonepayPwd')
alter table USERPROFILES add FonepayPwd varchar(100)

IF not EXISTS(Select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'USERPROFILES' and COLUMN_NAME = 'FonepayUSer')
alter table USERPROFILES add FonepayUSer varchar(100)

IF not EXISTS(Select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'USERPROFILES' and COLUMN_NAME = 'DeviceId')
alter table USERPROFILES add DeviceId varchar(100)

if not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'RMD_TRNMAIN_ADDITIONALINFO' and COLUMN_NAME = 'DOFULLRETURN')
alter table RMD_TRNMAIN_ADDITIONALINFO add DOFULLRETURN tinyint

if not exists(select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'LOG_UserDivisionRight')
create table LOG_UserDivisionRight(
	LogDate datetime,
	UName varchar(30),
	Division char(3),
	IsDefault tinyint,
	isSelected tinyint,
	isSelectAll char(1),
	isSelected_trn tinyint,
	SelectAll_trn char(1),
	EditUser varchar(30),
	EditStamp float,
)


if not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'LOCATION' and COLUMN_NAME = 'ACID')
alter table LOCATION add ACID varchar(50)

if not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'SETTING' and COLUMN_NAME = 'DisableCostPriceValidationInSO')
alter table SETTING add DisableCostPriceValidationInSO tinyint default 0 with values

if not exists (select * from information_schema.tables where table_name = 'TRN_SHIPPING_DETAILS')
create table TRN_SHIPPING_DETAILS
(
	VCHRNO varchar(25) not null,
	ADDRESS varchar(100) 
)

if not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'USERPROFILES' and COLUMN_NAME = 'AuthorizeCreditLimit')
alter table USERPROFILES add AuthorizeCreditLimit tinyint default 0 with values

if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'RMD_TRNPROD_STATUS' and COLUMN_NAME = 'BC' and CHARACTER_MAXIMUM_LENGTH < 50)
 alter table RMD_TRNPROD_STATUS alter column BC varchar(50)

IF EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'CRATE' AND TABLE_NAME = 'PURPROD') 
alter table PURPROD alter column CRATE numeric(20, 12)

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'VEHICLENO')
CREATE TABLE VEHICLENO
(
	VEHICLE_ID numeric(18, 0) IDENTITY(1,1) NOT NULL,
	VEHICLE_NO varchar(100) NULL,
	ACID varchar(50) NULL
)

if not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'VEHICLENO' and COLUMN_NAME = 'ACID')
alter table VEHICLENO add ACID varchar(50)

if not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'SETTING' and COLUMN_NAME = 'EnableVehicleMappingForCustomer')
alter table SETTING add EnableVehicleMappingForCustomer tinyint default 0 with values


IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'SETTINGSABB')
CREATE TABLE SETTINGSABB(
	SETTING_NAME varchar(100) NULL,
	CATEGORY varchar(200) NULL,
	DESCRIPTION nvarchar(max) NULL,
	MODULE varchar(100) NULL,
	DEFAULT_VALUE varchar(10) NULL,
	DEPENDENCIES varchar(200) NULL,
	POSSIBLE_VALUES varchar(50) NULL,
	DATA_TYPE varchar(50) NULL
)

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTINGSABB' AND COLUMN_NAME = 'DEFAULT_VALUE')
ALTER TABLE SETTINGSABB ALTER COLUMN DEFAULT_VALUE VARCHAR(100)

if not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'SETTINGSABB' and COLUMN_NAME = 'POSSIBLE_VALUES')
alter table SETTINGSABB add POSSIBLE_VALUES varchar(50)

if not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'USERPROFILES' and COLUMN_NAME = 'Mobile')
alter table USERPROFILES add Mobile varchar(30)

if not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'USERPROFILES' and COLUMN_NAME = 'Citizenship')
alter table USERPROFILES add Citizenship varchar(50)

if not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'SETTINGSABB' and COLUMN_NAME = 'DATA_TYPE')
alter table SETTINGSABB add DATA_TYPE varchar(50)

if not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'SETTING' and COLUMN_NAME = 'EnableShippingAddress')
alter table SETTING add EnableShippingAddress tinyint default 0 with values


if not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'LOCATION' and COLUMN_NAME = 'ACID')
alter table LOCATION add ACID varchar(50)

if not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'SETTING' and COLUMN_NAME = 'DisableCostPriceValidationInSO')
alter table SETTING add DisableCostPriceValidationInSO tinyint default 0 with values


if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'PURPROD_TDS')
create table PURPROD_TDS
(
	[VCHRNO] [varchar](25) NOT NULL,
	[ACID] [varchar](25) NULL,
	[FILONO] [varchar](50) NULL,
	[DRAMNT] [numeric](18, 2) DEFAULT 0 NULL,
	[CRAMNT] [numeric](18, 2) DEFAULT 0 NULL,
	[DIVISION] [char](3) NULL,
	[SNO] [int] DEFAULT 0  NULL,
	[NARRATION] [varchar](1000) NULL,
	[VoucherType] [varchar](2) NOT NULL,
	[ChequeNo] [varchar](500) NULL,
	[ChequeDate] [varchar](20) NULL,
	[FCurrency] [varchar](20) NULL,
	[FCurAmount] [numeric](18, 2) NULL,
	[CostCenter] [varchar](100) NULL,
	[MultiJournalSno] [numeric](18, 0) NULL,
	[OppAcid] [varchar](20) DEFAULT ('') NULL,
	[OppRemarks] [varchar](200) DEFAULT ('') NULL,
	[OppChequeNo] [varchar](50) DEFAULT ('') NULL,
	[OppChequeDate] [varchar](20) DEFAULT ('') NULL,
	[OppCostCenter] [varchar](50) DEFAULT ('') NULL,
	[PhiscalID] [varchar](20) DEFAULT ([dbo].[GetPhiscalID]()) NULL,
	[VTRACKID] [float] DEFAULT 0 NULL,
	[TOACID] [varchar](25) NULL,
	[STAMP] [float] DEFAULT (CONVERT([float],getdate(),0)) NULL,
	[guid] [varchar](100) NULL,
	[companyid] [varchar](25) NULL,
	[NARATION1] [varchar](1000) NULL,
	[SL_ACID] [varchar](25) NULL,
	[SALESMAN] [varchar](50) NULL,
	[ISTAXABLE] [tinyint] DEFAULT 0 NULL,
	[DISAMNT] [numeric](18, 8) NULL,
	[CPTYPE] [tinyint] DEFAULT 0 NULL,
	CONSTRAINT FK_PURPROD_TDS_PURMAIN FOREIGN KEY([VCHRNO], [VoucherType]) REFERENCES [dbo].[PURMAIN] ([VCHRNO], [VoucherType]) 
)

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'RMD_TRNMAIN_ADDITIONALINFO' and COLUMN_NAME = 'TDSACCOUNT')
alter table RMD_TRNMAIN_ADDITIONALINFO add TDSACCOUNT varchar(25)

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'RMD_TRNMAIN_ADDITIONALINFO' and COLUMN_NAME = 'TDSACCOUNTNAME')
alter table RMD_TRNMAIN_ADDITIONALINFO add TDSACCOUNTNAME varchar(250)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRNPROD' AND COLUMN_NAME ='MasterMCode') ALTER TABLE TRNPROD ADD MasterMCode VARCHAR(25)
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'OPPROD' AND COLUMN_NAME ='MasterMCode') ALTER TABLE OPPROD ADD MasterMCode VARCHAR(25)
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'PURPROD' AND COLUMN_NAME ='MasterMCode') ALTER TABLE PURPROD ADD MasterMCode VARCHAR(25)
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'INVPROD' AND COLUMN_NAME ='MasterMCode') ALTER TABLE INVPROD ADD MasterMCode VARCHAR(25)
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ABBPROD' AND COLUMN_NAME ='MasterMCode') ALTER TABLE ABBPROD ADD MasterMCode VARCHAR(25)
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'GRNPROD' AND COLUMN_NAME ='MasterMCode') ALTER TABLE GRNPROD ADD MasterMCode VARCHAR(25)
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'LOGPROD' AND COLUMN_NAME ='MasterMCode') ALTER TABLE LOGPROD ADD MasterMCode VARCHAR(25)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRNPROD_SUMMARY' AND COLUMN_NAME ='MasterMCode') ALTER TABLE TRNPROD_SUMMARY ADD MasterMCode VARCHAR(25)
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'PURPROD_SUMMARY' AND COLUMN_NAME ='MasterMCode') ALTER TABLE PURPROD_SUMMARY ADD MasterMCode VARCHAR(25)
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'OPPROD_SUMMARY' AND COLUMN_NAME ='MasterMCode') ALTER TABLE OPPROD_SUMMARY ADD MasterMCode VARCHAR(25)
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'INVPROD_SUMMARY' AND COLUMN_NAME ='MasterMCode') ALTER TABLE INVPROD_SUMMARY ADD MasterMCode VARCHAR(25)
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ABBPROD_SUMMARY' AND COLUMN_NAME ='MasterMCode') ALTER TABLE ABBPROD_SUMMARY ADD MasterMCode VARCHAR(25)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'DisablePOReferenceRequired')
alter table setting add DisablePOReferenceRequired tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'REPORTMASTER' AND COLUMN_NAME = 'REPORTROUNDINGMODE')
alter table REPORTMASTER add REPORTROUNDINGMODE tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_ORDERMAIN' AND COLUMN_NAME = 'VATBILL')
ALTER TABLE RMD_ORDERMAIN ADD VATBILL tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'EnableCostCenterWiseAccounting')
alter table SETTING add EnableCostCenterWiseAccounting tinyint default 0 with values

if not exists(select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'tblBarcodeDesign')
create table tblBarcodeDesign
(
	BarcodeLength int,
	VariantValue int,
);

 IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'DisablePointOnDiscount')
alter table SETTING add DisablePointOnDiscount tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME ='EnableNonTradingModule')
alter table setting add EnableNonTradingModule tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'QUOTATION_SUMMARY' AND COLUMN_NAME = 'BATCHID')
alter table QUOTATION_SUMMARY add BATCHID varchar(50)


IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'QUOTATION_PROD' AND COLUMN_NAME = 'BATCHID')
alter table QUOTATION_PROD add BATCHID varchar(50)

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'RMD_BILLTENDER' and COLUMN_NAME = 'STATUS')
alter table RMD_BILLTENDER add STATUS tinyint default 0 with values

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'SETTING' and COLUMN_NAME = 'showcashinreturnmode')
alter table SETTING add showcashinreturnmode tinyint default 0 with values


if not exists(select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'PAYMENTTERM_EXPORT')
create table PAYMENTTERM_EXPORT
(
	NAME varchar(100)
);


if not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'RMD_TRNMAIN_ADDITIONALINFO' and COLUMN_NAME = 'TRANSPORTATIONMODE')
alter table RMD_TRNMAIN_ADDITIONALINFO add TRANSPORTATIONMODE varchar(50)

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'SETTING' and COLUMN_NAME = 'EnablePreviousDateInExpiry')
alter table SETTING add EnablePreviousDateInExpiry tinyint default 0 with values

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'SETTING' and COLUMN_NAME ='ValidatePanNoInPartyMaster')
alter table SETTING add ValidatePanNoInPartyMaster tinyint default 1 with values

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_ORDERPROD' AND COLUMN_NAME = 'ALTERNATEQUANTIY' AND NUMERIC_SCALE = 0)
ALTER TABLE RMD_ORDERPROD ALTER COLUMN ALTERNATEQUANTIY NUMERIC(18,3)

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'GRNPROD' AND COLUMN_NAME = 'ALTERNATEQUANTIY' AND NUMERIC_SCALE = 0)
ALTER TABLE GRNPROD ALTER COLUMN ALTERNATEQUANTIY NUMERIC(18,3)

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'SETTING' and COLUMN_NAME = 'AllowQtyExceedInPo')
alter table SETTING add AllowQtyExceedInPo tinyint default 0 with values

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'RMD_ORDERPROD' and COLUMN_NAME = 'NONTAXABLE')
alter table RMD_ORDERPROD add NONTAXABLE numeric(20,12) default 0 with values

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'SETTING' and COLUMN_NAME = 'AllowBelowLandingCostInSo')
alter table SETTING add AllowBelowLandingCostInSo tinyint default 0 with values

if not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'PURMAIN_IMPORTDETAIL' and COLUMN_NAME = 'COUNTRY')
alter table PURMAIN_IMPORTDETAIL add COUNTRY varchar (100)

if not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'PURMAIN_IMPORTDETAIL' and COLUMN_NAME = 'PPDATE')
alter table PURMAIN_IMPORTDETAIL add PPDATE datetime

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'setting' and COLUMN_NAME = 'showLaserPintInTi')
alter table setting add showLaserPintInTi tinyint default 0 with values


if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'setting' and COLUMN_NAME = 'DisplayAltQtyInSales')
alter table setting add DisplayAltQtyInSales tinyint default 0 with values

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'setting' and COLUMN_NAME = 'EnableExportTaxInvoice')
alter table setting add EnableExportTaxInvoice tinyint default 0 with values

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'setting' and COLUMN_NAME = 'EnableGRNInPIForCargo')
alter table setting add EnableGRNInPIForCargo tinyint default 0 with values

If not Exists(Select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'PO_TermsAndConditions')
Create table PO_TermsAndConditions
(
	ID int,
	Label varchar(50),
	TermsAndConditions varchar(max)
);


if not exists (select * from INFORMATION_SCHEMA.COLUMNS where table_name = 'RMD_TRNMAIN_ADDITIONALINFO' and column_name = 'TermsAndCondition')
alter table RMD_TRNMAIN_ADDITIONALINFO add TermsAndCondition int


If not exists(Select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'SETTING' and COLUMN_NAME = 'SalesOrderExpiryPeriod')
alter table SETTING add SalesOrderExpiryPeriod int


If not exists(Select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'SETTING' and COLUMN_NAME = 'EnableAutoSOExpiry')
alter table SETTING add EnableAutoSOExpiry tinyint default 0 with values


If not exists(Select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'SETTING' and COLUMN_NAME = 'ApplyTermsAndCondition')
alter table SETTING add ApplyTermsAndCondition tinyint default 0 with values

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where table_name = 'RMD_TRNMAIN_ADDITIONALINFO' and column_name = 'TermsAndConditionID')
alter table RMD_TRNMAIN_ADDITIONALINFO add TermsAndConditionID int

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'USERPROFILES' AND COLUMN_NAME = 'StockAgeingLimit')
alter table USERPROFILES add StockAgeingLimit tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'EnableUserWiseAgeingLimit')
alter table setting add EnableUserWiseAgeingLimit tinyint default 0 with values

If not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'tblEmailReceiver')
create table tblEmailReceiver
(
	Username varchar(150),
	ReceiverEmail varchar(150)
);

if not exists(Select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'SETTING' and COLUMN_NAME = 'EnableCompulsoryCostCenter')
alter table SETTING add EnableCompulsoryCostCenter tinyint default 0 with values

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'LOG_PRICE_CHANGE' and COLUMN_NAME = 'EffectiveDate')
alter table LOG_PRICE_CHANGE add EffectiveDate datetime

if not exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'LOG_PRICE_CHANGE' and COLUMN_NAME = 'BATCH')
alter table LOG_PRICE_CHANGE add BATCH varchar(150)

If not Exists (Select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'SETTING' and COLUMN_NAME = 'EnableStockSettlement')
alter table SETTING add EnableStockSettlement tinyint default 0 with values

If not exists (Select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'MENUITEM' and COLUMN_NAME = 'LENGTH')
alter table MENUITEM add [LENGTH] numeric(18,8)

If not exists (Select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'MENUITEM' and COLUMN_NAME = 'WIDTH')
alter table MENUITEM add WIDTH numeric(18,8)

If not exists (Select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'MENUITEM' and COLUMN_NAME = 'BREADTH')
alter table MENUITEM add BREADTH numeric(18,8)

If not exists(Select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'SETTING' and COLUMN_NAME = 'LateBulkPriceUpdate')
alter table SETTING add LateBulkPriceUpdate tinyint default 0 with values


if not exists (select * from information_schema.tables where table_name = 'LateBulkPriceUpdate')
create table LateBulkPriceUpdate(
	ID int,
	MCODE varchar(50),
	UNIT varchar(25),
	BATCH varchar(150),
	EffectiveDate datetime,
	PRATE decimal(18,12),
	NEW_SPRICE_EX decimal(18,12),
	NEW_SPRICE_INC decimal(18,12),
	STATUS tinyint default 1,
	STAMP datetime
);


IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'TRNPROD_RECEIPE')
CREATE TABLE [dbo].[TRNPROD_RECEIPE](
	[ENO] [numeric](18, 0) NULL,
	[RMCODE] [varchar](25) NULL,
	[QTY] [numeric](18, 3) NULL,
	[SNO] [numeric](18, 0) NULL,
	[VCHRNO] [varchar](100) NULL,
	[DIVISION] [varchar](100) NULL,
	[VOUCHERTYPE] [varchar](100) NULL,
	[ITEMDESC] [varchar](100) NULL,
	[WAREHOUSE] [varchar](100) NULL,
	[UNIT] [varchar](100) NULL,
	[IsPrimaryItem] [tinyint] NULL,
	[PMCODE] [varchar](50) NULL
) ON [PRIMARY]


IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRNPROD_RECEIPE' AND COLUMN_NAME = 'ISPRIMARYITEM')
alter table TRNPROD_RECEIPE add ISPRIMARYITEM tinyint

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'INVPROD' AND COLUMN_NAME = 'ISPRIMARYITEM')
alter table INVPROD add ISPRIMARYITEM tinyint

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRNPROD' AND COLUMN_NAME = 'ISPRIMARYITEM')
alter table TRNPROD add ISPRIMARYITEM tinyint

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'INVPROD' AND COLUMN_NAME = 'REFSERAL')
alter table INVPROD add REFSERAL int

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRNPROD' AND COLUMN_NAME = 'REFSERAL')
alter table TRNPROD add REFSERAL int

If not exists (Select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'MENUITEM' and COLUMN_NAME = 'LENGTH')
alter table MENUITEM add [LENGTH] numeric(18,8)

If not exists (Select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'MENUITEM' and COLUMN_NAME = 'WIDTH')
alter table MENUITEM add WIDTH numeric(18,8)

If not exists (Select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'MENUITEM' and COLUMN_NAME = 'BREADTH')
alter table MENUITEM add BREADTH numeric(18,8)

If not exists(Select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'SETTING' and COLUMN_NAME = 'LateBulkPriceUpdate')
alter table SETTING add LateBulkPriceUpdate tinyint default 0 with values


IF not EXISTS(Select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'Setting' and COLUMN_NAME = 'DisableLandingCostValidation')
alter table SETTING add DisableLandingCostValidation tinyint default 0 with values

IF not EXISTS(Select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'Setting' and COLUMN_NAME = 'EnableTransferInRateUpdate')
alter table SETTING add EnableTransferInRateUpdate tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'POS_NOTIFICATION' AND COLUMN_NAME = 'REFORDBILL')
alter table POS_NOTIFICATION add REFORDBILL varchar(200)

IF not EXISTS(Select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'Setting' and COLUMN_NAME = 'EnableTransitWareHouseInBranchTransfer')
alter table SETTING add EnableTransitWareHouseInBranchTransfer tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'rmd_warehouse' AND COLUMN_NAME = 'ISTRANSITWAREHOUSE')
alter table rmd_warehouse add ISTRANSITWAREHOUSE  tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'INVPROD_SUMMARY' AND COLUMN_NAME = 'BATCHID')
alter table INVPROD_SUMMARY add BATCHID varchar(50)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'PURPROD_SUMMARY' AND COLUMN_NAME = 'BATCHID')
alter table PURPROD_SUMMARY add BATCHID varchar(50)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRNPROD_SUMMARY' AND COLUMN_NAME = 'BATCHID')
alter table TRNPROD_SUMMARY add BATCHID varchar(50)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'OPPROD_SUMMARY' AND COLUMN_NAME = 'BATCHID')
alter table OPPROD_SUMMARY add BATCHID varchar(50)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ABBPROD_SUMMARY' AND COLUMN_NAME = 'BATCHID')
alter table ABBPROD_SUMMARY add BATCHID varchar(50)

IF not EXISTS(Select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'Setting' and COLUMN_NAME = 'EnableBatchIdInAdjustment')
alter table SETTING add EnableBatchIdInAdjustment tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_TRNMAIN_ADDITIONALINFO' AND COLUMN_NAME = 'AFTERFLATDISCRATE')
ALTER TABLE RMD_TRNMAIN_ADDITIONALINFO ADD AFTERFLATDISCRATE numeric (20,12) default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_TRNMAIN_ADDITIONALINFO' AND COLUMN_NAME = 'BEFOREFLATDISCRATE')
ALTER TABLE RMD_TRNMAIN_ADDITIONALINFO ADD BEFOREFLATDISCRATE numeric (20,12) default 0 with values

IF not EXISTS(Select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'Setting' and COLUMN_NAME = 'EnableOnetoOneProduction')
alter table SETTING add EnableOnetoOneProduction tinyint default 0 with values

IF not EXISTS(Select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'Setting' and COLUMN_NAME = 'ShowOnlyServiceItemInNorms')
alter table SETTING add ShowOnlyServiceItemInNorms tinyint default 0 with values

IF not EXISTS(Select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'Setting' and COLUMN_NAME = 'BatchAutoNPI')
alter table SETTING add BatchAutoNPI tinyint default 0 with values

IF not EXISTS(Select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'Setting' and COLUMN_NAME = 'EnableDiscountedOption')
alter table SETTING add EnableDiscountedOption tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'DEFAULTA4PRINTINABBVSALES')
alter table setting add DEFAULTA4PRINTINABBVSALES tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ABBMAIN' AND COLUMN_NAME = 'INVOICETYPE')
alter table ABBMAIN add [INVOICETYPE] [varchar](50) NULL

 IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ABBMAIN' AND COLUMN_NAME = 'PCL')
 ALTER TABLE ABBMAIN ADD [PCL] [varchar](5) NULL

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ABBMAIN' AND COLUMN_NAME = 'FLATDCAMNT')
alter table ABBMAIN add [FLATDCAMNT] [numeric](20, 12)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ABBMAIN' AND COLUMN_NAME = 'SALESMANID')
alter table ABBMAIN add SALESMANID varchar(20)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ABBMAIN' AND COLUMN_NAME = 'SALESMAN')
alter table ABBMAIN add SALESMAN varchar(100)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'abbprod' AND COLUMN_NAME = 'BATCHID')
alter table abbprod add BATCHID varchar(50)

 IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'USERPROFILES' AND COLUMN_NAME = 'AllowQuantityApproval')
alter table USERPROFILES add AllowQuantityApproval tinyint default 1 with values 

 IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'MultipleRetailPrice')
 BEGIN
CREATE TABLE [dbo].[MultipleRetailPrice](
	[MCODE] [varchar](25) NULL,
	[RATE] [numeric](20, 12) NOT NULL,
	[EXPDATE] [date] NULL,
	[ISACTIVE] [tinyint] NULL,
	[CreatedBy] [varchar](100) NULL,
	[STAMP] [datetime] NULL
) ON [PRIMARY]
ALTER TABLE [dbo].[MultipleRetailPrice]  WITH CHECK ADD FOREIGN KEY([MCODE])
REFERENCES [dbo].[MENUITEM] ([MCODE])
END

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'BATCHPRICE_MASTER' AND COLUMN_NAME = 'LABELMRP')
ALTER TABLE [BATCHPRICE_MASTER] ADD [LABELMRP] [numeric](18, 3) default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'menuitem' AND COLUMN_NAME = 'EnableAutoBatch')
alter table menuitem add EnableAutoBatch tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'EnableCompulsaryConsumption')
alter table setting add EnableCompulsaryConsumption tinyint default 1 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RECURRING_LOG' AND COLUMN_NAME = 'HOLD_DATE')
ALTER TABLE RECURRING_LOG ADD HOLD_DATE DATE NULL

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RECURRING_LOG' AND COLUMN_NAME = 'HOLD_REMARS')
ALTER TABLE RECURRING_LOG ADD HOLD_REMARS VARCHAR(2500) NULL

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RECURRING_LOG' AND COLUMN_NAME = 'MAIN_RECURRING_ID')
ALTER TABLE RECURRING_LOG ADD MAIN_RECURRING_ID VARCHAR(25) NULL

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'TIFROMDESKTOPBILLING')
alter table setting add TIFROMDESKTOPBILLING tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_TRNMAIN_ADDITIONALINFO' AND COLUMN_NAME = 'JOBCARDNO')
alter table RMD_TRNMAIN_ADDITIONALINFO add JOBCARDNO nvarchar(50)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_TRNPRODS' AND COLUMN_NAME = 'APPROVEDQUANTITY')
alter table RMD_TRNPRODS add APPROVEDQUANTITY numeric(18,8)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_TRNPRODS' AND COLUMN_NAME = 'APPROVEDALTQTY')
alter table RMD_TRNPRODS add APPROVEDALTQTY numeric(18,8)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RECURRING_LOG' AND COLUMN_NAME = 'COST_CENTER')
ALTER TABLE RECURRING_LOG ADD COST_CENTER varchar (50)

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'RECURRINGMODE')
CREATE TABLE RECURRINGMODE (
    ID int,
	NAME varchar(200),
	MONTH int
);

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'EnableJobCardEntry')
alter table SETTING add EnableJobCardEntry tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'RECURRING_TRANSACTION')
alter table SETTING add RECURRING_TRANSACTION tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AOPMAIN' AND COLUMN_NAME = 'SALESMANID')
alter table AOPMAIN add SALESMANID varchar(20)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AOPMAIN' AND COLUMN_NAME = 'FLATDCAMNT')
alter table AOPMAIN add FLATDCAMNT numeric(20, 12)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AOPMAIN' AND COLUMN_NAME = 'SALESMAN')
alter table AOPMAIN add SALESMAN varchar(100)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ACCMAIN' AND COLUMN_NAME = 'FLATDCAMNT')
alter table ACCMAIN add FLATDCAMNT numeric(20, 12)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'OPAMAIN' AND COLUMN_NAME = 'FLATDCAMNT')
alter table OPAMAIN add FLATDCAMNT numeric(20, 12)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'MEMBERSHIP' AND COLUMN_NAME = 'GENDER')
alter table MEMBERSHIP add GENDER varchar(50)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'MEMBERSHIP' AND COLUMN_NAME = 'STATE')
alter table MEMBERSHIP add STATE varchar(100)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'MEMBERSHIP' AND COLUMN_NAME = 'DISTRICT')
alter table MEMBERSHIP add DISTRICT varchar(100)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'MembershipExpiryPeriod')
alter table setting add MembershipExpiryPeriod numeric(18,3) default 1 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'EnableRequisitionApproval')
alter table setting add EnableRequisitionApproval tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'batchprice_master' AND COLUMN_NAME = 'AFTERVATDISCOUNT')
ALTER TABLE batchprice_master
ADD AFTERVATDISCOUNT numeric (18,3) default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'REQUISITION_ORDERPROD' AND COLUMN_NAME = 'APPROVEDQUANTITY')
alter table REQUISITION_ORDERPROD add APPROVEDQUANTITY numeric(18,8)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'REQUISITION_ORDERPROD' AND COLUMN_NAME = 'APPROVEDALTQTY')
alter table REQUISITION_ORDERPROD add APPROVEDALTQTY numeric(18,8)

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'SEQUENCES_BARCODE')
CREATE TABLE SEQUENCES_BARCODE (
    VNAME varchar(50),
	AUTO int,
	START float,
	CurNo float,
	DIVISION varchar(10),
	PHISCALID varchar(20)	
);

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'BarcodeLength')
alter table setting add BarcodeLength int

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'MENUITEM' AND COLUMN_NAME = 'LabeledMRP')
alter table MENUITEM add LabeledMRP [decimal](18, 2) NULL

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_TRNMAIN_ADDITIONALINFO' AND COLUMN_NAME = 'AFTERVATDISCOUNT')
ALTER TABLE RMD_TRNMAIN_ADDITIONALINFO  ADD AFTERVATDISCOUNT [numeric](18, 3) NULL

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_TRNMAIN_ADDITIONALINFO' AND COLUMN_NAME = 'TDSAMOUNT')
ALTER TABLE RMD_TRNMAIN_ADDITIONALINFO  ADD TDSAMOUNT [numeric](18, 3) NULL

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'MEMBERITEMSPERIODS')
alter table setting add MEMBERITEMSPERIODS datetime

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'ENABLEBARCODEWISEBATCH')
alter table setting add ENABLEBARCODEWISEBATCH tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'EnableMembershipSales')
alter table setting add EnableMembershipSales tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'EnableMembershipSales')
alter table setting add EnableMembershipSales tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_TRNPRODS' AND COLUMN_NAME = 'APPROVEDQUANTITY')
alter table RMD_TRNPRODS add APPROVEDQUANTITY numeric(18,8)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_TRNPRODS' AND COLUMN_NAME = 'APPROVEDALTQTY')
alter table RMD_TRNPRODS add APPROVEDALTQTY numeric(18,8)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'MENUITEM' AND COLUMN_NAME = 'LabeledMRP')
alter table MENUITEM add LabeledMRP decimal (18, 2) NULL

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'StockAdjustmentBatch ')
alter table setting add StockAdjustmentBatch varchar(100) default 'SETTLEMENT001' with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'ShowPriceChangePopup')
alter table setting add ShowPriceChangePopup tinyint default 1 with values


IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'ALLOWMINUSTOCK_PURCHASE')
alter table setting add ALLOWMINUSTOCK_PURCHASE int default 2 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'ALLOWMINUSTOCK_OPENING')
alter table setting add ALLOWMINUSTOCK_OPENING int default 2 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'ALLOWMINUSTOCK_DEBITNOTE')
alter table setting add ALLOWMINUSTOCK_DEBITNOTE int default 2 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'ENABLESINGLEBATCHMODE')
alter table setting add ENABLESINGLEBATCHMODE int default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'ALLOWMINUSTOCK_STOCKISSUE')
alter table setting add ALLOWMINUSTOCK_STOCKISSUE int default 2 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'ALLOWMINUSTOCK_TRANSFEROUT')
alter table setting add ALLOWMINUSTOCK_TRANSFEROUT int default 2 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'ALLOWMINUSTOCK_SALES')
alter table setting add ALLOWMINUSTOCK_SALES int default 2 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'ALLOWMINUSTOCK_STOCKISSUE')
alter table setting add ALLOWMINUSTOCK_STOCKISSUE int default 2 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'ALLOWMINUSTOCK_REPACK')
alter table setting add ALLOWMINUSTOCK_REPACK int default 2 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'ALLOWMINUSTOCK_CONSUMPTION')
alter table setting add ALLOWMINUSTOCK_CONSUMPTION int default 2 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'userprofiles' AND COLUMN_NAME = 'AllowMinusStock')
alter table userprofiles add AllowMinusStock tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'EnableBarcodeMapwithVariant')
alter table setting add EnableBarcodeMapwithVariant varchar(200) default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'userprofiles' AND COLUMN_NAME = 'AllowReverseEntry')
alter table userprofiles add AllowReverseEntry tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'PaymentModes' AND COLUMN_NAME = 'shortcutkey')
alter table PaymentModes add  shortcutkey varchar(10)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'PURMAIN_IMPORTDETAIL' AND COLUMN_NAME = 'TRNAC')
alter table PURMAIN_IMPORTDETAIL add TRNAC varchar(20)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'itemwise_variant_attributes' AND COLUMN_NAME = 'IsActive')
alter table itemwise_variant_attributes add IsActive tinyint default 1 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'USERPROFILES' AND COLUMN_NAME = 'AllowRateChangeInBarcodePrinting')
alter table USERPROFILES add AllowRateChangeInBarcodePrinting tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'EnableItemWiseBatch')
alter table setting add EnableItemWiseBatch varchar(200) default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'receipeprod' AND COLUMN_NAME = 'NumberOfChoiceItem')
alter table receipeprod add NumberOfChoiceItem tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'membership' AND COLUMN_NAME = 'FromBackend')
alter table membership add FromBackend tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'COUNTRYNAME')
alter table setting add COUNTRYNAME varchar(200) default 'Nepal' with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'ISPATVERSION')
ALTER TABLE SETTING ADD ISPATVERSION TINYINT DEFAULT 0 WITH VALUES

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RECEIPEPROD' AND COLUMN_NAME = 'IsChoiceItem')
alter table receipeprod add IsChoiceItem tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = '_LOG_RECEIPEPROD' AND COLUMN_NAME = 'IsChoiceItem')
alter table _LOG_RECEIPEPROD add IsChoiceItem tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'ShowTiRefNOInCN')
alter table setting add ShowTiRefNOInCN tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'HideServiceItemsInPI')
alter table setting add HideServiceItemsInPI tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'SaveMemberInCustomerProfile')
alter table setting add SaveMemberInCustomerProfile tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'EnableStockAdjustment')
alter table setting add EnableStockAdjustment tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'LOCATION' AND COLUMN_NAME = 'STATUS')
alter table LOCATION add STATUS tinyint default 1 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'menuitem' AND COLUMN_NAME = 'ECSRATE')
alter table menuitem add ECSRATE numeric(5,2)

alter table _LOG_RECEIPEPROD alter column LOGACTION varchar(50)
alter table _LOG_RECEIPEMAIN alter column LOGACTION varchar(50)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'EnableInDisCalculationInTi')
alter table setting add EnableInDisCalculationInTi tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'userprofiles' AND COLUMN_NAME = 'SODiscountLimit')
alter table userprofiles add [SODiscountLimit] [numeric](5, 2) default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'userprofiles' AND COLUMN_NAME = 'AllowRateChangeInSO')
alter table userprofiles add [AllowRateChangeInSO] [numeric](5, 2) default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'DefaultFilterIndex')
alter table setting add DefaultFilterIndex tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'LOG_PRICE_CHANGE' AND COLUMN_NAME = 'OLD_SRATE_EXVAT')
ALTER TABLE LOG_PRICE_CHANGE ADD OLD_SRATE_EXVAT NUMERIC (25,12) DEFAULT 0 WITH VALUES


IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'enableTaxCategory')
alter table setting add enableTaxCategory  tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'EnableContractPrice')
alter table setting add EnableContractPrice tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'REPORTMASTER' AND COLUMN_NAME = 'RightColumnNumber')
ALTER TABLE REPORTMASTER ADD RightColumnNumber TINYINT default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'REPORTMASTER' AND COLUMN_NAME = 'LeftColumnNumber')
ALTER TABLE REPORTMASTER ADD LeftColumnNumber TINYINT default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'purprod' AND COLUMN_NAME = 'ECSAMOUNT')
alter table purprod add ECSAMOUNT [numeric](18, 8) default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'trnProd' AND COLUMN_NAME = 'ECSAMOUNT')
alter table trnProd add ECSAMOUNT [numeric](18, 8) default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'opprod' AND COLUMN_NAME = 'ECSAMOUNT')
alter table opprod add ECSAMOUNT [numeric](18, 8) default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'REQUISITION_ORDERPROD' AND COLUMN_NAME = 'ECSAMOUNT')
alter table REQUISITION_ORDERPROD add ECSAMOUNT [numeric](18, 8) default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'invprod' AND COLUMN_NAME = 'ECSAMOUNT')
alter table invprod add ECSAMOUNT [numeric](18, 8) default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'receipemain' AND COLUMN_NAME = 'IsActive')
alter table receipemain add IsActive tinyint default 1 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'GRNPROD' AND COLUMN_NAME = 'ECSAMOUNT')
ALTER TABLE GRNPROD ADD [ECSAMOUNT] [numeric](18, 8) default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_ORDERMAIN' AND COLUMN_NAME = 'COSTCENTER')
ALTER TABLE RMD_ORDERMAIN ADD COSTCENTER VARCHAR(25) NULL

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRNMAIN' AND COLUMN_NAME = 'EXPORTCOUNTRY')
ALTER TABLE TRNMAIN ADD EXPORTCOUNTRY VARCHAR(100) NULL

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRNMAIN' AND COLUMN_NAME = 'EXPORTNO')
ALTER TABLE TRNMAIN ADD EXPORTNO VARCHAR(50) NULL

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRNMAIN' AND COLUMN_NAME = 'EXPORTDATE')
ALTER TABLE TRNMAIN ADD EXPORTDATE VARCHAR(25) NULL

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRNMAIN' AND COLUMN_NAME = 'EXPORTDATE_BS')
ALTER TABLE TRNMAIN ADD EXPORTDATE_BS VARCHAR(25) NULL

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'LOG_PRICE_CHANGE' AND COLUMN_NAME = 'OLD_SRATE')
ALTER TABLE LOG_PRICE_CHANGE ADD OLD_SRATE NUMERIC (25,12) DEFAULT 0 WITH VALUES

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'LOG_PRICE_CHANGE' AND COLUMN_NAME = 'NEW_SRATE')
ALTER TABLE LOG_PRICE_CHANGE ADD NEW_SRATE NUMERIC (25,12) DEFAULT 0 WITH VALUES


IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'LOG_PRICE_CHANGE' AND COLUMN_NAME = 'NEW_SRATE_EXVAT')
ALTER TABLE LOG_PRICE_CHANGE ADD NEW_SRATE_EXVAT NUMERIC (25,12) DEFAULT 0 WITH VALUES

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'LOG_PRICE_CHANGE' AND COLUMN_NAME = 'OLD_WSRATE')
ALTER TABLE LOG_PRICE_CHANGE ADD OLD_WSRATE NUMERIC (25,12) DEFAULT 0 WITH VALUES

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'LOG_PRICE_CHANGE' AND COLUMN_NAME = 'NEW_WSRATE')
ALTER TABLE LOG_PRICE_CHANGE ADD NEW_WSRATE NUMERIC (25,12) DEFAULT 0 WITH VALUES

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'LOG_PRICE_CHANGE' AND COLUMN_NAME = 'OLD_WSRATE_EXVAT')
ALTER TABLE LOG_PRICE_CHANGE ADD OLD_WSRATE_EXVAT NUMERIC (25,12) DEFAULT 0 WITH VALUES

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'LOG_PRICE_CHANGE' AND COLUMN_NAME = 'OLD_WSRATE_EXVAT')
ALTER TABLE LOG_PRICE_CHANGE ADD OLD_WSRATE_EXVAT NUMERIC (25,12) DEFAULT 0 WITH VALUES

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'LOG_PRICE_CHANGE' AND COLUMN_NAME = 'NEW_WSRATE_EXVAT')
ALTER TABLE LOG_PRICE_CHANGE ADD NEW_WSRATE_EXVAT NUMERIC (25,12) DEFAULT 0 WITH VALUES

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'LOG_PRICE_CHANGE' AND COLUMN_NAME = 'REFENTRYNO')
ALTER TABLE LOG_PRICE_CHANGE ADD REFENTRYNO VARCHAR(25) NULL

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'LOG_PRICE_CHANGE' AND COLUMN_NAME = 'RATE_ID')
alter TABLE LOG_PRICE_CHANGE ADD RATE_ID BIGINT DEFAULT 0 WITH VALUES

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'CheckSaleableQtyInSO')
alter table setting add CheckSaleableQtyInSO tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'PURMAIN_IMPORTDETAIL' AND COLUMN_NAME = 'ITEMNAME')
alter table PURMAIN_IMPORTDETAIL add 	[ITEMNAME] [varchar](100) NULL

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'PURMAIN_IMPORTDETAIL' AND COLUMN_NAME = 'QUANTITY')
alter table PURMAIN_IMPORTDETAIL add 	[QUANTITY] [numeric](18, 8) NULL

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'DisableDuplicateItemEntry')
alter table setting add DisableDuplicateItemEntry tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'AllowPurchaseWithoutVATNO')
alter table setting add AllowPurchaseWithoutVATNO tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'EnableCompanyWiseNotification')
alter table setting add EnableCompanyWiseNotification tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'PURMAIN_IMPORTDETAIL' AND COLUMN_NAME = 'ITEMNAME')
alter table PURMAIN_IMPORTDETAIL add ITEMNAME varchar(100)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'PURMAIN_IMPORTDETAIL' AND COLUMN_NAME = 'QUANTITY')
alter table PURMAIN_IMPORTDETAIL add QUANTITY numeric(18,8)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'division' AND COLUMN_NAME = 'TELA')
alter table division add TELA varchar(50)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'division' AND COLUMN_NAME = 'TELB')
alter table division add TELB varchar(50)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'division' AND COLUMN_NAME = 'email')
alter table division add email	varchar(50)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'EnablePIReferenceInTransferOut')
alter table setting add EnablePIReferenceInTransferOut tinyint default 1 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'FormWisePrintformat' AND COLUMN_NAME = 'UserWiseFileName')
ALTER TABLE FormWisePrintformat ADD UserWiseFileName VARCHAR(200) 

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'FormWisePrintformat' AND COLUMN_NAME = 'PROJECT')
ALTER TABLE FormWisePrintformat ADD PROJECT varchar(200)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'REPORTMASTER' AND COLUMN_NAME = 'DYNAMICHEADER')
ALTER TABLE REPORTMASTER  ADD DYNAMICHEADER TINYINT

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'EnableProductWiseAccMapping')
alter table setting add EnableProductWiseAccMapping varchar(50)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'EnableWSRateGroup')
alter table setting add EnableWSRateGroup varchar(50)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'purprod' AND COLUMN_NAME = 'BATCHID')
alter table purprod add BATCHID varchar(50)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'trnProd' AND COLUMN_NAME = 'BATCHID')
alter table trnProd add BATCHID varchar(50)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'opprod' AND COLUMN_NAME = 'BATCHID')
alter table opprod add BATCHID varchar(50)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'invprod' AND COLUMN_NAME = 'BATCHID')
alter table invprod add BATCHID varchar(50)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'grnProd' AND COLUMN_NAME = 'BATCHID')
alter table grnProd add BATCHID varchar(50)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'REQUISITION_ORDERPROD' AND COLUMN_NAME = 'BATCHID')
alter table REQUISITION_ORDERPROD add BATCHID varchar(50)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'SOREFERENCE_REQUIRED')
alter table setting add SOREFERENCE_REQUIRED  tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'EnableMenucodeGenerationInEdit')
alter table setting add EnableMenucodeGenerationInEdit tinyint default 1 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'ShowStockInProductMaster')
alter table setting add ShowStockInProductMaster tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'PhiscalYear' AND COLUMN_NAME = 'PriorFiscalYear')
alter table PhiscalYear add PriorFiscalYear tinyint default 0 with values

--update PhiscalYear set PriorFiscalYear=1 where phiscalid ='77/78'

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'NBarcodeBaseBilling')
alter table setting add NBarcodeBaseBilling tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'EnableRecurringItem')
ALTER TABLE SETTING add EnableRecurringItem tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'EnableCommissionCalculation')
ALTER TABLE SETTING add EnableCommissionCalculation  tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'EnableWSRateGroup')
alter table setting add EnableWSRateGroup tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'MENUITEM' AND COLUMN_NAME = 'HASCOMMISSIONCHARGE')
ALTER TABLE MENUITEM add HASCOMMISSIONCHARGE  tinyint default 0 with values

--IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'MENUITEM' AND COLUMN_NAME = 'IsRecurringItem')
--ALTER TABLE MENUITEM add IsRecurringItem  bit default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'MENUITEM' AND COLUMN_NAME = 'ISRECURRING')
ALTER TABLE MENUITEM add ISRECURRING  tinyint default 0 with values

--IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'rategroup_master' AND COLUMN_NAME = 'ApplyWSRate')
-- alter table rategroup_master add ApplyWSRate tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'ENABLEMANUALSALESRETURN')
ALTER TABLE SETTING ADD ENABLEMANUALSALESRETURN TINYINT DEFAULT 0 WITH VALUES

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'DEFAULT_ALL_DIV_INREPORT')
ALTER TABLE SETTING ADD DEFAULT_ALL_DIV_INREPORT TINYINT DEFAULT 0 WITH VALUES

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'DIVISION' AND COLUMN_NAME = 'RATEGROUPID_WSALE')
ALTER TABLE DIVISION ADD RATEGROUPID_WSALE INT NULL

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'BATCHPRICE_MASTER' AND COLUMN_NAME = 'BATCHCREATEDATE')
ALTER TABLE BATCHPRICE_MASTER ADD BATCHCREATEDATE DATE NULL

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'ENABLE_NETAMOUNT_EDIT')
alter table setting add ENABLE_NETAMOUNT_EDIT tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'BARCODE' AND COLUMN_NAME = 'VCHRNO')
alter table BARCODE add [VCHRNO] [varchar](25)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ROLEPROFILES' AND COLUMN_NAME = 'ALLOWRATECHANGEINPI')
ALTER TABLE ROLEPROFILES ADD ALLOWRATECHANGEINPI tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'RATECHANGE_IN_POBASEPI')
ALTER TABLE SETTING add RATECHANGE_IN_POBASEPI tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'ENABLE_WSRATE_INSORDER')
alter table setting add ENABLE_WSRATE_INSORDER tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'ENABLE_VTEXCLUDINGRATE_INSORDER')
alter table setting add ENABLE_VTEXCLUDINGRATE_INSORDER tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'ENABLE_NETAMOUNT_EDIT')
alter table setting add ENABLE_NETAMOUNT_EDIT tinyint default 0 with values

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES  WHERE  TABLE_NAME = 'RECEIPEITEMTYPE')
CREATE TABLE [dbo].[RECEIPEITEMTYPE](
	[ITEMTYPECODE] [tinyint] NULL,
	[ITEMTYPENAME] [varchar](100) NULL
)

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES  WHERE  TABLE_NAME = 'RecurringItemCategory')
CREATE TABLE RecurringItemCategory 
(
	categoryId tinyint not null identity,
	category varchar(50) not null
	constraint PK_recurringCategory PRIMARY KEY (categoryId)
)

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES  WHERE  TABLE_NAME = 'RECURRING_LOG')
CREATE TABLE RECURRING_LOG
(
	ENTRYNO varchar(25) NOT NULL,
	REFNO varchar(25) NOT NULL,
	TRNDATE smalldatetime null,
	TRNAC varchar(25) null,
	PARENT_MCODE varchar(25) not null,
	MCODE varchar(25) not null,
	CATEGORY varchar(25) not null,
	RECURRING_DATE smalldatetime null,
	AMOUNT numeric (20,12) default 0,
	VENDOR varchar(25) null,
	REMARKS varchar(25) null,
	[STATUS] tinyint default 0 ,
	REFVOUCHERNO varchar(25) null,
	LAST_RECUR_DATE smalldatetime null,
	RECURRING_MONTH int null,
	STAMP float null,
	COMPANYID varchar(25) null,
	DIVISION char(3) not null,
	PHISCALID varchar(20) not null

)

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES  WHERE  TABLE_NAME = 'COMMISSION_LOG')
CREATE TABLE COMMISSION_LOG
(
	ENTRYNO varchar(25) NOT NULL,
	REFNO varchar(25) NOT NULL,
	TRNDATE smalldatetime null,
	TRNAC varchar(25) null,
	MCODE varchar(25) not null,
	SALESMAN varchar(25) null,
	DEAL_AMOUNT numeric (20,12) default 0 ,
	COMMISSION_PERCENTAGE numeric (20,12) default 0 ,
	COMMISSION_AMOUNT numeric (20,12) default 0,
	REMARKS varchar(50) null,
	[STATUS] tinyint default 0 ,
	STAMP float null,
	COMPANYID varchar(25) null,
	DIVISION char(3) not null,
	PHISCALID varchar(20) not null
)


IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES  WHERE  TABLE_NAME = 'ORDERMAIN_FORCECLOSE')
                                     create table ORDERMAIN_FORCECLOSE(
										CREATED_BY varchar(100),
										CREATED_DATE date,
										STAMP float,
										VCHRNO varchar(50),
										REMARKS varchar(50)
									);

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ORDERMAIN_FORCECLOSE' AND COLUMN_NAME = 'DIVISION')
alter table ORDERMAIN_FORCECLOSE add DIVISION Char(3)


IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES  WHERE  TABLE_NAME = 'USERLOGINTOKENLIST')
                                        CREATE TABLE USERLOGINTOKENLIST
                                        (
                                        Domain varchar(20),
                                        Token varchar(500),
                                        Username varchar(50),
                                        [User] varchar(max),
                                        CompanyId varchar(20),
                                        Stamp datetime,
                                        INDEX index_USERLOGINTOKENLIST(Domain, Token)
                                        );

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES  WHERE  TABLE_NAME = 'tblTaxCategory')
                                   CREATE TABLE tblTaxCategory
									(
										TCatId TINYINT NOT NULL IDENTITY,
										Category VARCHAR(50) NOT NULL,
										TaxRate NUMERIC(5,2) NOT NULL,
										CONSTRAINT PK_tblTaxCategory PRIMARY KEY (TCatId)
									)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'EnableProperExpTracking')
alter table setting add EnableProperExpTracking tinyint default 0 with values


IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'menuitem' AND COLUMN_NAME = 'ENABLEITEMWISEBATCH')
alter table menuitem add ENABLEITEMWISEBATCH int default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'GRNMAIN' AND COLUMN_NAME = 'SALESMANID')
ALTER TABLE GRNMAIN ADD SALESMANID VARCHAR(20) NULL

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'GRNMAIN' AND COLUMN_NAME = 'SALESMAN')
ALTER TABLE GRNMAIN ADD SALESMAN VARCHAR(100) NULL

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'MENUITEM' AND COLUMN_NAME = 'TaxCategory')
ALTER TABLE MENUITEM ADD TaxCategory TINYINT
								
IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'USERLOGINTOKENLIST' AND COLUMN_NAME = 'Stamp')
alter table USERLOGINTOKENLIST add  Stamp datetime

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'ISDEFAULTORDERUNIT' AND TABLE_NAME = 'MULTIALTUNIT')
ALTER TABLE MULTIALTUNIT ADD ISDEFAULTORDERUNIT TINYINT

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'PERFOMASOBILLMODE')
alter table setting  add PERFOMASOBILLMODE tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'rmd_ordermain' AND COLUMN_NAME = 'DCRATE')
alter table rmd_ordermain add [DCRATE] [numeric](18, 2) 

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'rmd_ordermain' AND COLUMN_NAME = 'FLATDCAMNT')
alter table rmd_ordermain add [FLATDCAMNT] [numeric](20, 12)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'INVBASEPROFORMA')
alter table setting add  INVBASEPROFORMA tinyint default 0 with values

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'USERLOGINTOKENLIST' AND COLUMN_NAME = 'CompanyId')
alter table USERLOGINTOKENLIST add CompanyId varchar(20)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'ENABLESOAPPROVAL')
ALTER TABLE SETTING ADD ENABLESOAPPROVAL TINYINT DEFAULT 0 WITH VALUES


IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'DISACCOUNTINGINSBILLING')
alter table setting add DISACCOUNTINGINSBILLING tinyint default 0 with values


IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_ORDERMAIN' AND COLUMN_NAME = 'CNDN_MODE')
alter table RMD_ORDERMAIN add [CNDN_MODE] [int] 

 IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'userprofiles' AND COLUMN_NAME = 'ALLOWZERORATEINPI')
 alter table userprofiles add ALLOWZERORATEINPI tinyint default 0 with values


 IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ROLEPROFILES' AND COLUMN_NAME = 'ALLOWZERORATEINPI')
 alter table ROLEPROFILES add ALLOWZERORATEINPI tinyint default 0 with values


 IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'ENABLE_SOINTI')
 alter table setting add ENABLE_SOINTI tinyint default 0 with values

  IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'IMPORTPOBILLMODE')
 alter table setting add IMPORTPOBILLMODE tinyint default 0 with values

 
  IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'setting' AND COLUMN_NAME = 'ENABLE_QUOTATTION_INSO')
 alter table setting add ENABLE_QUOTATTION_INSO tinyint default 0 with values

   IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_ORDERPROD' AND COLUMN_NAME = 'DISCOUNT')
 alter table RMD_ORDERPROD add [DISCOUNT] [numeric](18, 8)

  IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_ORDERPROD' AND COLUMN_NAME = 'TAXABLE')
 alter table RMD_ORDERPROD add [TAXABLE] [numeric](20, 12) 

  IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_ORDERMAIN' AND COLUMN_NAME = 'MWAREHOUSE')
 alter table  RMD_ORDERMAIN add [MWAREHOUSE] [varchar](50)


   IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_ORDERPROD' AND COLUMN_NAME = 'INDDISCOUNT')
 alter table RMD_ORDERPROD add [INDDISCOUNT] [numeric](18, 8)


    IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_ORDERPROD' AND COLUMN_NAME = 'INDDISCOUNTRATE')
 alter table RMD_ORDERPROD add [INDDISCOUNTRATE] [float] 

    IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_ORDERPROD' AND COLUMN_NAME = 'INVRATE')
 alter table RMD_ORDERPROD add [INVRATE] [numeric](18, 8) 

     IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_ORDERPROD' AND COLUMN_NAME = 'ISVAT')
 alter table RMD_ORDERPROD add  [ISVAT] [tinyint]

     IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_ORDERPROD' AND COLUMN_NAME = 'ALTCONFACTOR')
 alter table RMD_ORDERPROD add [ALTCONFACTOR] [numeric](9, 0) 

 IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_ORDERPROD' AND COLUMN_NAME = 'ALTERNATEQUANTIY')
 alter table RMD_ORDERPROD add [ALTERNATEQUANTIY] [numeric](18, 4)

  IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_ORDERMAIN' AND COLUMN_NAME = 'SALESMANID')
 alter table RMD_ORDERMAIN add SALESMANID VARCHAR(20) NULL

   IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_ORDERMAIN' AND COLUMN_NAME = 'SALESMAN')
 ALTER TABLE RMD_ORDERMAIN ADD SALESMAN VARCHAR(100) NULL


  IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'GRNPROD' AND COLUMN_NAME = 'BASEUNIT')
 ALTER TABLE GRNPROD ADD 	[BASEUNIT] [varchar](100) NULL

   IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'GRNPROD' AND COLUMN_NAME = 'GSTRATE')
 ALTER TABLE GRNPROD ADD 	[GSTRATE] [float] NULL

   IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'GRNPROD' AND COLUMN_NAME = 'INDDISCOUNTRATE')
 ALTER TABLE GRNPROD ADD 	[INDDISCOUNTRATE] [float] NULL

   IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'GRNPROD' AND COLUMN_NAME = 'CompanyId')
 ALTER TABLE GRNPROD ADD 	CompanyId varchar(20)

   IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'GRNPROD' AND COLUMN_NAME = 'MRP')
 ALTER TABLE GRNPROD ADD 	[MRP] [numeric](18, 5) NULL

   IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'GRNPROD' AND COLUMN_NAME = 'BASEQUANTITY')
 ALTER TABLE GRNPROD ADD 		[BASEQUANTITY] [numeric](18, 0) NULL

 IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'GRNPROD' AND COLUMN_NAME = 'ALTERNATEQUANTIY')
 ALTER TABLE GRNPROD ADD 	[ALTERNATEQUANTIY] [numeric](18, 4) NULL

 IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'GRNPROD' AND COLUMN_NAME = 'ALTCONFACTOR')
 ALTER TABLE GRNPROD ADD 	[ALTCONFACTOR] [numeric](18, 0) NULL

 
 IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'GRNPROD' AND COLUMN_NAME = 'GUID')
 ALTER TABLE GRNPROD ADD 	 GUID VARCHAR(100)


   IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'GRNMAIN' AND COLUMN_NAME = 'PCL')
 ALTER TABLE GRNMAIN ADD [PCL] [varchar](5) NULL

   IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ReportColumnFormat' AND COLUMN_NAME = 'ColumnDataType')
 ALTER TABLE ReportColumnFormat ADD ColumnDataType varchar (50)

    IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'GRNMAIN' AND COLUMN_NAME = 'CNDN_MODE')
 ALTER TABLE GRNMAIN ADD [CNDN_MODE] [int] NULL

 IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'GRNMAIN' AND COLUMN_NAME = 'FLATDCAMNT')
alter table GRNMAIN add [FLATDCAMNT] [numeric](20, 12)


 IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'GRNMAIN' AND COLUMN_NAME = 'INVOICETYPE')
alter table GRNMAIN add [INVOICETYPE] [varchar](50) NULL

 IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'GRNMAIN' AND COLUMN_NAME = 'BRANCH')
alter table GRNMAIN add [BRANCH] [varchar](20) NULL


IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_ORDERMAIN' AND COLUMN_NAME = 'TRN_DATE')
alter table RMD_ORDERMAIN
add  [TRN_DATE] [smalldatetime] NULL

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_ORDERMAIN' AND COLUMN_NAME = 'BS_DATE')
alter table RMD_ORDERMAIN
add [BS_DATE] [varchar](10) NULL

alter table menuitem
alter column ImageUpload varchar(200) null

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_ORDERMAIN' AND COLUMN_NAME = 'REFORDBILL')
ALTER TABLE RMD_ORDERMAIN ADD REFORDBILL VARCHAR(25) NULL


alter table batchprice_master alter column Costprice  [numeric](32, 18) 

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_TRNPROD_STATUS' AND COLUMN_NAME = 'GUID')
ALTER TABLE RMD_TRNPROD_STATUS ADD GUID VARCHAR(100)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_TRNPROD_STATUS' AND COLUMN_NAME = 'batch')
ALTER TABLE RMD_TRNPROD_STATUS ADD batch VARCHAR(100)


IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'ISUSEDFORDMS')
ALTER TABLE SETTING ADD ISUSEDFORDMS TINYINT DEFAULT 0 WITH VALUES



IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'NBATCHWISEPRICE')
ALTER TABLE SETTING ADD NBATCHWISEPRICE TINYINT DEFAULT 1 WITH VALUES

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'ENABLE_GRN_IN_PI')
ALTER TABLE SETTING ADD ENABLE_GRN_IN_PI TINYINT DEFAULT 0 WITH VALUES

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'BARCODE' AND COLUMN_NAME = 'barcodeDetails')
alter  table BARCODE add barcodeDetails nvarchar(max)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'GRNPROD' AND COLUMN_NAME = 'isApproved')
 ALTER TABLE GRNPROD ADD isApproved tinyint

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'REQUISITION_ORDERMAIN' AND COLUMN_NAME = 'GUID')
ALTER TABLE REQUISITION_ORDERMAIN ADD GUID VARCHAR(100)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'REQUISITION_ORDERMAIN' AND COLUMN_NAME = 'CHALANNO')
ALTER TABLE REQUISITION_ORDERMAIN ADD CHALANNO [varchar](50) NULL

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'REQUISITION_ORDERMAIN' AND COLUMN_NAME = 'TRNTIME')
ALTER TABLE REQUISITION_ORDERMAIN ADD TRNTIME [varchar](15) NULL

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'REQUISITION_ORDERMAIN' AND COLUMN_NAME = 'TOTAMNT')
ALTER TABLE REQUISITION_ORDERMAIN ADD TOTAMNT [numeric](20, 12) NULL

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'REQUISITION_ORDERMAIN' AND COLUMN_NAME = 'DCAMNT')
ALTER TABLE REQUISITION_ORDERMAIN ADD DCAMNT [numeric](20, 12) NULL

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'REQUISITION_ORDERMAIN' AND COLUMN_NAME = 'DCRATE')
ALTER TABLE REQUISITION_ORDERMAIN ADD DCRATE [numeric](18, 2) NULL

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'REQUISITION_ORDERMAIN' AND COLUMN_NAME = 'VATAMNT')
ALTER TABLE REQUISITION_ORDERMAIN ADD VATAMNT [numeric](20, 12) NULL

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'REQUISITION_ORDERMAIN' AND COLUMN_NAME = 'NETAMNT')
ALTER TABLE REQUISITION_ORDERMAIN ADD NETAMNT [numeric](20, 12) NULL

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'REQUISITION_ORDERMAIN' AND COLUMN_NAME = 'ADVANCE')
ALTER TABLE REQUISITION_ORDERMAIN ADD ADVANCE [numeric](22, 12) NULL

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'REQUISITION_ORDERMAIN' AND COLUMN_NAME = 'TRNMODE')
ALTER TABLE REQUISITION_ORDERMAIN ADD [TRNMODE] [varchar](50) NULL

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'REQUISITION_ORDERMAIN' AND COLUMN_NAME = 'FLATDCAMNT')
ALTER TABLE REQUISITION_ORDERMAIN ADD 	[FLATDCAMNT] [numeric](20, 12) NULL

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'REQUISITION_ORDERPROD' AND COLUMN_NAME = 'isApproved')
alter table REQUISITION_ORDERPROD add isApproved tinyint 

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'REQUISITION_ORDERPROD' AND COLUMN_NAME = 'DNID')
alter table REQUISITION_ORDERPROD add [DNID] [numeric](18, 0) 

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'REQUISITION_ORDERMAIN')
CREATE TABLE REQUISITION_ORDERMAIN 
( 
	[BILLTO] [varchar](100) NULL,
	[BILLTOADD] [varchar](50) NULL,
	[TRNUSER] [varchar](25) NULL,
	[VATBILL] [tinyint] NULL,
	[DELIVERYDATE] [smalldatetime] NULL,
	[DELIVERYTIME] [varchar](15) NULL,
	[ORDERS] [varchar](25) NULL,
	[REFORDBILL] [varchar](50) NULL,
	[INDDIS] [tinyint] NULL,
	[CREBATE] [numeric](18, 2) NULL,
	[CREDIT] [tinyint] NULL,
	[DUEDATE] [datetime] NULL,
	[TRNAC] [varchar](25) NULL,
	[PARAC] [varchar](25) NULL,
	[PARTRNAMNT] [numeric](22, 12) NULL,
	[RETTO] [varchar](255) NULL,
	[CHEQUENO] [varchar](25) NULL,
	[CHEQUEDATE] [datetime] NULL,
	[POST] [tinyint] NULL,
	[POSTUSER] [varchar](50) NULL,
	[FPOSTUSER] [varchar](50) NULL,
	[TERMINAL] [char](3) NULL,
	[SHIFT] [varchar](25) NULL,
	[EXPORT] [tinyint] NULL,
	[CHOLDER] [varchar](50) NULL,
	[CARDNO] [varchar](50) NULL,
	[EditUser] [varchar](50) NULL,
	[MEMBERNO] [varchar](50) NULL,
	[MEMBERNAME] [varchar](50) NULL,
	[EDITED] [smallint] NULL,
	[TAXABLE] [numeric](20, 12) NULL,
	[NONTAXABLE] [numeric](20, 12) NULL,
	[VMODE] [tinyint] NULL,
	[BILLTOTEL] [varchar](50) NULL,
	[BILLTOMOB] [varchar](50) NULL,
	[TRN_DATE] [datetime] NULL,
	[BS_DATE] [varchar](50) NULL,
	[STAX] [numeric](20, 12) NULL,
	[TOTALCASH] [numeric](20, 2) NULL,
	[TOTALCREDIT] [numeric](20, 2) NULL,
	[TOTALCREDITCARD] [numeric](20, 2) NULL,
	[TOTALGIFTVOUCHER] [numeric](20, 2) NULL,
	[TENDER] [numeric](18, 2) NULL,
	[CHANGE] [numeric](18, 2) NULL,
	[CardTranID] [varchar](20) NULL,
	[ReturnVchrID] [varchar](20) NULL,
	[TranID] [numeric](18, 0) NULL,
	[VoucherStatus] [varchar](200) NULL,
	[PRESCRIBEBY] [varchar](50) NULL,
	[DISPENSEBY] [varchar](50) NULL,
	[RECEIVEBY] [varchar](50) NULL,
	[Edate] [datetime] NULL,
	[STATUS] [tinyint] NULL,
	[CONFIRMEDBY] [varchar](50) NULL,
	[CONFIRMEDTIME] [varchar](25) NULL,
	[ROUNDOFF] [numeric](22, 12) NULL,
	[Customer_Count] [numeric](18, 8) NULL,
	[DBUSER] [varchar](50) NULL,
	[HOSTID] [varchar](25) NULL,
	[VNUM] [varchar](25) NULL,
	[TOTALREBATE] [numeric](18, 2) NULL,
	[DISVALUE] [numeric](18, 8) NULL,
	[STAXVALUE] [numeric](20, 12) NULL,
	[TOTALFLATDISCOUNT] [numeric](18, 8) NULL,
	[TOTALINDDISCOUNT] [numeric](18, 8) NULL,
	[TOTALLOYALTY] [numeric](18, 8) NULL,
	[TOTALPROMOTION] [numeric](18, 8) NULL,
	[NETWITHOUTROUNDOFF] [numeric](18, 8) NULL,
	[COSTCENTER] [varchar](100) NULL,
	[JOBNO] [varchar](50) NULL,
	[MWAREHOUSE] [varchar](50) NULL,
	[POSTID] [varchar](20) NULL,
	[INVOICETYPE] [varchar](50) NULL,
	[CUS_FIX_DISCOUNT_PER] [varchar](5) NULL,
	[SALESMAN] [varchar](100) NULL,
	[SalesManID] [varchar](20) NULL,
	[PCL] [varchar](5) NULL,
	[CNDN_MODE] [int] NULL
);


IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'REQUISITION_ORDERPROD')
CREATE TABLE  REQUISITION_ORDERPROD
( 
	[CHALANNO] [varchar](15) NULL,
	[RealQty] [numeric](18, 3) NULL,
	[AltQty] [numeric](18, 3) NULL,
	[DISCOUNT] [numeric](20, 12) NULL,
	[REALRATE] [decimal](20, 12) NULL,
	[EXPORT] [tinyint] NULL,
	[IDIS] [varchar](100) NULL,
	[OPQTY] [numeric](18, 3) NULL,
	[REALQTY_IN] [numeric](18, 3) NULL,
	[ALTQTY_IN] [numeric](18, 3) NULL,
	[WAREHOUSE] [varchar](50) NULL,
	[REFBILLQTY] [numeric](18, 3) NULL,
	[SPRICE] [numeric](22, 12) NULL,
	[EXPDATE] [datetime] NULL,
	[REFOPBILL] [numeric](18, 0) NULL,
	[ALTUNIT] [varchar](15) NULL,
	[TRNAC] [varchar](25) NULL,
	[PRATE] [numeric](20, 12) NULL,
	[VRATE] [numeric](20, 12) NULL,
	[ALTRATE] [decimal](20, 12) NULL,
	[VPRATE] [numeric](15, 2) NULL,
	[VSRATE] [numeric](15, 2) NULL,
	[TAXABLE] [numeric](20, 12) NULL,
	[NONTAXABLE] [numeric](20, 12) NULL,
	[INVRATE] [numeric](18, 8) NULL,
	[EXRATE] [numeric](18, 2) NULL,
	[NCRATE] [numeric](18, 2) NULL,
	[CRATE] [numeric](20, 12) NULL,
	[CUSTOM] [numeric](18, 6) NULL,
	[WEIGHT] [numeric](18, 6) NULL,
	[DRATE] [numeric](18, 6) NULL,
	[CARTON] [numeric](18, 6) NULL,
	[INVOICENO] [varchar](50) NULL,
	[ISSUENO] [varchar](50) NULL,
	[BC] [varchar](50) NULL,
	[GENERIC] [varchar](50) NULL,
	[BATCH] [varchar](100) NOT NULL,
	[MFGDATE] [datetime] NULL,
	[MANUFACTURER] [varchar](100) NULL,
	[SERVICETAX] [numeric](20, 12) NULL,
	[BCODEID] [numeric](18, 0) NULL,
    [SALESMANID] [int] NULL,
	[COSTCENTER] [varchar](100) NULL,
	[ISVAT] [tinyint] NULL,
	[PROMOTION] [numeric](18, 8) NULL,
	[LOYALTY] [numeric](18, 8) NULL,
	[INDDISCOUNT] [numeric](18, 8) NULL,
	[FLATDISCOUNT] [numeric](18, 8) NULL,
	[PRODCONDITION] [varchar](20) NULL,
	[PRODMODE] [varchar](20) NULL,
	[ITEMTYPE] [varchar](20) NULL,
	[RECEIVEDTYPE] [varchar](20) NULL,
	[REMARKS] [varchar](255) NULL,
	[ISSERVICECHARGE] [tinyint] NULL,
	[SCHEMESAPPLIED] [varchar](200) NULL,
	[PrimaryDiscount] [numeric](18, 8) NULL,
	[SecondaryDiscount] [numeric](18, 8) NULL,
	[LiquiditionDiscount] [numeric](18, 8) NULL,
	[GSTRATE] [float] NULL,
	[INDDISCOUNTRATE] [float] NULL,
	[MRP] [numeric](18, 5) NULL,
	[BASEQUANTITY] [numeric](18, 0) NULL,
	[ALTERNATEQUANTIY] [numeric](18, 3) NULL,
	[BASEUNIT] [varchar](100) NULL,
	[ALTERNATEUNIT] [varchar](100) NULL,
	[ALTCONFACTOR] [numeric](18, 0) NULL
);




IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_TRNPROD_STATUS' AND COLUMN_NAME = 'GUID')
ALTER TABLE RMD_TRNPROD_STATUS ADD GUID VARCHAR(100)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_TRNPROD_STATUS' AND COLUMN_NAME = 'batch')
ALTER TABLE RMD_TRNPROD_STATUS ADD batch VARCHAR(100)


IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'ISUSEDFORDMS')
ALTER TABLE SETTING ADD ISUSEDFORDMS TINYINT DEFAULT 0 WITH VALUES


IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'NBATCHWISEPRICE')
ALTER TABLE SETTING ADD NBATCHWISEPRICE TINYINT DEFAULT 1 WITH VALUES

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETTING' AND COLUMN_NAME = 'ENABLE_GRN_IN_PI')
ALTER TABLE SETTING ADD ENABLE_GRN_IN_PI TINYINT DEFAULT 0 WITH VALUES

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'BARCODE' AND COLUMN_NAME = 'barcodeDetails')
alter  table BARCODE add barcodeDetails nvarchar(max)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_SALES_DELIVERY' AND COLUMN_NAME = 'RATE')

ALTER TABLE RMD_SALES_DELIVERY ADD RATE numeric(20,12)

IF not exists(select *from INFORMATION_SCHEMA.TABLES  WHERE TABLE_NAME='LOG_PRICE_CHANGE')
CREATE TABLE LOG_PRICE_CHANGE
(
	LOGDATE datetime  NOT NULL,
	LOGUSER varchar(50) NOT NULL,
	LOGACTION varchar(10) NOT NULL,
	DIV varchar(20) NOT NULL,
	MCODE varchar(25) NOT NULL,
	UNIT varchar(20) NULL,
	CRATE numeric(18,2)  default 0 NULL,
	NRATE_A decimal(20,12)  default 0 NULL,
	WNRATE_A decimal(20,12) default 0 NULL,
	STAMP float  not null
)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'LOGMENUITEM')
CREATE TABLE LOGMENUITEM
( 
    [GST] [numeric](8, 3) NULL,
	[SHELFLIFE] [int] NULL,
	[MRP] [numeric](18, 6) NULL,
	[ExpiryDate] [datetime] NULL,
	[PRODUCTID] [varchar](20) NULL,
	[PCL] [varchar](100) NULL,
	[STATUS] [tinyint] NULL,
	[In_Rate_A] [decimal](20, 12) NULL,
	[In_Rate_B] [decimal](20, 12) NULL,
	[In_Rate_C] [decimal](20, 12) NULL,
	[HASECSCHARGE] [int] NULL,
	[Ex_Prate_A] [decimal](20, 12) NULL,
	[SMARGIN] [numeric](18, 2) NULL,
	[IN_PRATE_A] [numeric](20, 12) NULL,
	[WARRANTY] [float] NULL,
	[ISACTIVE] [tinyint] NULL,
	[HASVARIANT] [tinyint] NULL,
	[Description] [varchar](200) NULL,
	[BRANDCODE] [nvarchar](max) NULL
);

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'LOGMULTIALTUNIT')
CREATE TABLE LOGMULTIALTUNIT
(
	[BASEUOM] [varchar](20) NULL,
	[UOMNAME] [varchar](50) NULL,
	[UPC] [numeric](18, 5) NULL,
	[STATUS] [tinyint] NULL,
	[SRATE_DISCOUNT] [decimal](20, 12) NULL,
	[WSRATE_DISCOUNT] [decimal](20, 12) NULL,
	[IN_PRATE] [decimal](20, 12) NULL,
	[ISACTIVE] [tinyint] default 1 NULL
);

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'NEPDATE' AND COLUMN_NAME = 'BS')
ALTER TABLE NepDate ALTER COLUMN BS SMALLINT NOT NULL;

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'CurrencyMaster')
CREATE TABLE CurrencyMaster
(
	CountryName NVARCHAR(100) NOT NULL,
	CurrencyName NVARCHAR(50) NOT NULL,
	CurrencyCode NVARCHAR(10) NOT NULL,
	CurrencySymbol NVARCHAR(10) NOT NULL,
	CurrencyRate Numeric(18,8),
	LastUpdateDate DateTime NOT NULL,
	CONSTRAINT UQ_CurrencyMaster_CurrencyCode UNIQUE (CurrencyCode),
	CONSTRAINT PK_CurrencyMaster PRIMARY KEY (CountryName, CurrencyName, CurrencyCode),
);

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'MultiCurrencyPrice')
CREATE  TABLE MultiCurrencyPrice
(
	MCODE VARCHAR(25) NOT NULL,
	CurrencyCode NVARCHAR(10) NOT NULL,
	CurrencyRATE_A decimal(20,12),
	CurrencyRATE_B decimal(20,12),
	IsActive tinyint ,
    Stamp decimal(32,12),
	CreatedBy varchar(25),
	CONSTRAINT PK_MultiCurrencyPrice PRIMARY KEY (MCODE, CurrencyCode),
    CONSTRAINT FK_MultiCurrencyPrice_MCODE FOREIGN KEY (MCODE) REFERENCES MenuItem (MCODE),
	CONSTRAINT FK_MultiCurrencyPrice_CurrencyCode FOREIGN KEY (CurrencyCode) REFERENCES CurrencyMaster (CurrencyCode),
);

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'FOREX')
CREATE TABLE [dbo].[FOREX](
	[COUNTRY] [varchar](50) NULL,
	[SYMBOL] [varchar](10) NULL,
	[CURRATE] [decimal](18, 10) NULL,
	[CDATE] [datetime] NULL
) ON [PRIMARY] ;

IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'RMD_TRNPRODS_SUMMARY')
CREATE TABLE [dbo].[RMD_TRNPRODS_SUMMARY](
	[VCHRNO] [varchar](25) NOT NULL,
	[CHALANNO] [varchar](50) NULL,
	[DIVISION] [char](3) NOT NULL,
	[MCODE] [varchar](25) NOT NULL,
	[UNIT] [varchar](20) NULL,
	[Quantity] [numeric](18, 3) NULL,
	[RealQty] [numeric](18, 3) NULL,
	[AltQty] [numeric](18, 3) NULL,
	[RATE] [decimal](20, 12) NULL,
	[AMOUNT] [numeric](20, 12) NULL,
	[DISCOUNT] [numeric](20, 12) NULL,
	[VAT] [numeric](20, 12) NULL,
	[REALRATE] [decimal](20, 12) NULL,
	[EXPORT] [tinyint] NULL,
	[IDIS] [varchar](100) NULL,
	[OPQTY] [numeric](18, 3) NULL,
	[REALQTY_IN] [numeric](18, 3) NULL,
	[ALTQTY_IN] [numeric](18, 3) NULL,
	[WAREHOUSE] [varchar](50) NULL,
	[REFBILLQTY] [numeric](18, 3) NULL,
	[SPRICE] [numeric](22, 12) NULL,
	[EXPDATE] [datetime] NULL,
	[REFOPBILL] [numeric](18, 0) NULL,
	[ALTUNIT] [varchar](15) NULL,
	[TRNAC] [varchar](25) NULL,
	[PRATE] [numeric](18, 2) NULL,
	[VRATE] [numeric](20, 12) NULL,
	[ALTRATE] [decimal](20, 12) NULL,
	[VPRATE] [numeric](15, 2) NULL,
	[VSRATE] [numeric](15, 2) NULL,
	[TAXABLE] [numeric](20, 12) NULL,
	[NONTAXABLE] [numeric](20, 12) NULL,
	[INVRATE] [numeric](18, 8) NULL,
	[EXRATE] [numeric](18, 2) NULL,
	[NCRATE] [numeric](18, 2) NULL,
	[CRATE] [numeric](18, 6) NULL,
	[SNO] [int] NULL,
	[CUSTOM] [numeric](18, 6) NULL,
	[WEIGHT] [numeric](18, 6) NULL,
	[DRATE] [numeric](18, 6) NULL,
	[CARTON] [numeric](18, 6) NULL,
	[INVOICENO] [varchar](50) NULL,
	[ISSUENO] [varchar](50) NULL,
	[BC] [varchar](50) NULL,
	[GENERIC] [varchar](50) NULL,
	[BATCH] [varchar](50) NULL,
	[MFGDATE] [datetime] NULL,
	[MANUFACTURER] [varchar](100) NULL,
	[SERVICETAX] [numeric](20, 12) NULL,
	[BCODEID] [numeric](18, 0) NULL,
	[VoucherType] [varchar](2) NOT NULL,
	[SALESMANID] [int] NULL,
	[PhiscalID] [varchar](20) NULL,
	[STAMP] [float] NULL,
	[ITEMDESC] [varchar](200) NULL,
	[DNID] [numeric](18, 0) NULL,
	[PROMOTION] [numeric](18, 8) NULL,
	[LOYALTY] [numeric](18, 8) NULL,
	[INDDISCOUNT] [numeric](18, 8) NULL,
	[FLATDISCOUNT] [numeric](18, 8) NULL,
	[NETAMOUNT] [numeric](18, 8) NULL,
	[ADDTIONALROW] [numeric](18, 8) NULL,
	[COSTCENTER] [varchar](100) NULL,
	[ISVAT] [tinyint] NULL,
	[PRODCONDITION] [varchar](20) NULL,
	[PRODMODE] [varchar](20) NULL,
	[ITEMTYPE] [varchar](20) NULL,
	[RECEIVEDTYPE] [varchar](20) NULL,
	[REMARKS] [varchar](255) NULL,
	[ISSERVICECHARGE] [tinyint] NULL,
	[SCHEMESAPPLIED] [varchar](200) NULL,
	[PrimaryDiscount] [numeric](18, 8) NULL,
	[SecondaryDiscount] [numeric](18, 8) NULL,
	[LiquiditionDiscount] [numeric](18, 8) NULL,
	[GSTRATE] [float] NULL,
	[INDDISCOUNTRATE] [float] NULL,
	[COMPANYID] [varchar](25) NULL,
	[MRP] [numeric](18, 5) NULL,
	[BASEQUANTITY] [numeric](18, 2) NULL,
	[ALTERNATEQUANTIY] [numeric](18, 3) NULL,
	[BASEUNIT] [varchar](100) NULL,
	[ALTERNATEUNIT] [varchar](100) NULL,
	[ALTCONFACTOR] [numeric](10, 2) NULL,
	[isApproved] [tinyint] NULL,
	[QpsDiscount] [numeric](9, 2) NULL,
	[ECSAMOUNT] [numeric](18, 8) NULL,
	[guid] [varchar](100) NULL
) ON [PRIMARY];

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'EnableForeignCurrency' AND TABLE_NAME = 'setting')
alter table setting add EnableForeignCurrency tinyint default 0 with values

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'REPORTQUERY' AND TABLE_NAME = 'DEFAULTREPORTFORMAT')
alter table DEFAULTREPORTFORMAT add REPORTQUERY NVARCHAR(MAX)

if not exists(select * from information_schema.columns where column_name = 'RCVBY' and table_name = 'rmd_trnmain_additionalinfo')
alter table rmd_trnmain_additionalinfo add RCVBY varchar(200)

IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_TRNMAIN_ADDITIONALINFO' AND COLUMN_NAME = 'partyAc')
ALTER TABLE RMD_TRNMAIN_ADDITIONALINFO ADD partyAc varchar(50)

IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_TRNMAIN_ADDITIONALINFO' AND COLUMN_NAME = 'MITI')
ALTER TABLE RMD_TRNMAIN_ADDITIONALINFO ADD MITI varchar(20)

IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_TRNMAIN_ADDITIONALINFO' AND COLUMN_NAME = 'SHIFT')
ALTER TABLE RMD_TRNMAIN_ADDITIONALINFO ADD SHIFT INT

IF EXISTS (select * from information_schema.columns where column_name = 'ALTERNATEQUANTIY' and table_name = 'INVPROD_SUMMARY')
ALTER TABLE INVPROD_SUMMARY ALTER COLUMN ALTERNATEQUANTIY NUMERIC(18,3)

IF EXISTS (select * from information_schema.columns where column_name = 'ALTERNATEQUANTIY' and table_name = 'RMD_TRNPRODS')
ALTER TABLE RMD_TRNPRODS ALTER COLUMN ALTERNATEQUANTIY NUMERIC(18,3)

IF EXISTS (select * from information_schema.columns where column_name = 'ALTERNATEQUANTIY' and table_name = 'RMD_TRNPRODS_SUMMARY')
ALTER TABLE RMD_TRNPRODS_SUMMARY ALTER COLUMN ALTERNATEQUANTIY NUMERIC(18,3)

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'BATCHID' AND TABLE_NAME = 'RMD_TRNPRODS')
 ALTER TABLE RMD_TRNPRODS ADD BATCHID VARCHAR(50)

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'SETTLEMENTID' AND TABLE_NAME = 'tblDenomination')
 ALTER TABLE tblDenomination ADD SETTLEMENTID int

if not exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME='DECLINESTATUS')
CREATE TABLE [dbo].[DECLINESTATUS](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[STAMP] [varchar](255) NULL,
	[COMPANYID] [varchar](255) NULL,
	[GUID] [varchar](255) NULL,
	[STATUS] [nvarchar](200) NULL,
PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

if exists (select 1 from sys.columns  where name = 'logid' and OBJECT_NAME(object_id) = '_LOG_RMD_WAREHOUSE') and not exists (select 1 from sys.columns  where name = 'logid' and OBJECT_NAME(object_id) = '_LOG_RMD_WAREHOUSE' and is_identity = 1)
begin
alter table _LOG_RMD_WAREHOUSE drop column logid ;
alter table _LOG_RMD_WAREHOUSE add logid int identity(1,1) ;
end

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'BATCHPRICE_MASTER_DETAIL')
BEGIN
CREATE TABLE [dbo].[BATCHPRICE_MASTER_DETAIL](
	[BATCHID] [varchar](50) NOT NULL,
	[BATCHCODE] [varchar](100) NOT NULL,
	[MCODE] [varchar](25) NOT NULL,
	[BatchCreateVoucher] [varchar](20) NULL,
	[COSTPRICE] [numeric](31, 12) NULL,
	[LANDINGCOST] [numeric](32, 12) NULL,
	[SUPCODE] [varchar](25) NULL,
	[STATUS] [tinyint] NULL,
	[MRP] [numeric](18, 5) NULL,
	[SELLRATEBEFORETAX] [numeric](32, 12) NULL,
	[W_SELLRATEBEFORETAX] [numeric](32, 12) NULL,
	[W_MRP] [numeric](32, 12) NULL,
	[MFGDATE] [date] NULL,
	[EXPDATE] [date] NULL,
	[STAMP] [datetime] NULL,
	[COMPANYID] [varchar](25) NULL
) ON [PRIMARY]
END

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ABBPROD' AND COLUMN_NAME = 'NBATCHID')
ALTER TABLE dbo.ABBPROD ADD NBATCHID VARCHAR(50)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRNPROD' AND COLUMN_NAME = 'NBATCHID')
ALTER TABLE dbo.TRNPROD ADD NBATCHID VARCHAR(50)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'INVPROD' AND COLUMN_NAME = 'NBATCHID')
ALTER TABLE dbo.INVPROD ADD NBATCHID VARCHAR(50)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'PURPROD' AND COLUMN_NAME = 'NBATCHID')
ALTER TABLE dbo.PURPROD ADD NBATCHID VARCHAR(50)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'OPPROD' AND COLUMN_NAME = 'NBATCHID')
ALTER TABLE dbo.OPPROD ADD NBATCHID VARCHAR(50)

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'CompulsoryHSCodeInput' AND TABLE_NAME = 'SETTING')
ALTER TABLE SETTING ADD CompulsoryHSCodeInput TINYINT DEFAULT 0 WITH VALUES


IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRNPROD_SUMMARY' AND COLUMN_NAME ='HS_Code')

ALTER TABLE TRNPROD_SUMMARY ADD HS_Code VARCHAR(30)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'PURPROD_SUMMARY' AND COLUMN_NAME ='HS_Code') 
ALTER TABLE PURPROD_SUMMARY ADD HS_Code VARCHAR(30)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'OPPROD_SUMMARY' AND COLUMN_NAME ='HS_Code') 
ALTER TABLE OPPROD_SUMMARY ADD HS_Code VARCHAR(30)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'INVPROD_SUMMARY' AND COLUMN_NAME ='HS_Code') 
ALTER TABLE INVPROD_SUMMARY ADD HS_Code VARCHAR(30)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ABBPROD_SUMMARY' AND COLUMN_NAME ='HS_Code') 
ALTER TABLE ABBPROD_SUMMARY ADD HS_Code VARCHAR(30)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRNPROD' AND COLUMN_NAME ='HS_Code') 

ALTER TABLE TRNPROD ADD HS_Code VARCHAR(30)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'PURPROD' AND COLUMN_NAME ='HS_Code') 

ALTER TABLE PURPROD ADD HS_Code VARCHAR(30)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'OPPROD' AND COLUMN_NAME ='HS_Code') 

ALTER TABLE OPPROD ADD HS_Code VARCHAR(30)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'INVPROD' AND COLUMN_NAME ='HS_Code') 

ALTER TABLE INVPROD ADD HS_Code VARCHAR(30)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ABBPROD' AND COLUMN_NAME ='HS_Code') 

ALTER TABLE ABBPROD ADD HS_Code VARCHAR(30)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'PREPROD' AND COLUMN_NAME ='HS_Code') 

ALTER TABLE PREPROD ADD HS_Code VARCHAR(30)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'QUOTATION_SUMMARY' AND COLUMN_NAME ='HS_Code') 
ALTER TABLE QUOTATION_SUMMARY ADD HS_Code VARCHAR(30)

IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_ORDERMAIN' AND COLUMN_NAME = 'VoucherType')

ALTER TABLE RMD_ORDERMAIN ADD VoucherType VARCHAR(2)



IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_ORDERMAIN' AND COLUMN_NAME = 'PARAC')

ALTER TABLE RMD_ORDERMAIN ADD PARAC VARCHAR(25)


IF not EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_ORDERMAIN' AND COLUMN_NAME = 'RECEIVEBY')
ALTER TABLE RMD_ORDERMAIN ADD RECEIVEBY VARCHAR(50)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'REPORTMASTER' AND COLUMN_NAME = 'PROJECT')
ALTER TABLE REPORTMASTER ADD PROJECT  VARCHAR(100)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'REPORTDETAILS' AND COLUMN_NAME = 'PROJECT')
ALTER TABLE REPORTDETAILS ADD PROJECT  VARCHAR(100)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'REPORTCOLUMNFORMAT' AND COLUMN_NAME = 'PROJECT')
ALTER TABLE REPORTCOLUMNFORMAT ADD PROJECT  VARCHAR(100)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'REPORTCONTEXTMENU' AND COLUMN_NAME = 'PROJECT')
ALTER TABLE REPORTCONTEXTMENU ADD PROJECT  VARCHAR(100)

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'DEFAULTREPORTFORMAT' AND COLUMN_NAME = 'PROJECT')
ALTER TABLE DEFAULTREPORTFORMAT ADD PROJECT  VARCHAR(100)

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'PAYMENTMODES' AND COLUMN_NAME = 'PAYMENTMODENAME' AND CHARACTER_MAXIMUM_LENGTH < 50) 
ALTER TABLE PAYMENTMODES ALTER COLUMN PAYMENTMODENAME VARCHAR(50) NOT NULL ;

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'MEMBERSHIP' AND COLUMN_NAME = 'ISACTIVE')
ALTER TABLE MEMBERSHIP ADD ISACTIVE BIT DEFAULT(1) WITH VALUES;

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'MEMBERSHIP' AND COLUMN_NAME = 'ISMember')
ALTER TABLE MEMBERSHIP ADD IsMember BIT DEFAULT(1) WITH VALUES;

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'MEMBERSHIP' AND COLUMN_NAME = 'FNAME' AND CHARACTER_MAXIMUM_LENGTH < 100)
ALTER TABLE MEMBERSHIP ALTER COLUMN FNAME VARCHAR(100)

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'MEMBERSHIP' AND COLUMN_NAME = 'P_STREET' AND CHARACTER_MAXIMUM_LENGTH < 100)
ALTER TABLE MEMBERSHIP ALTER COLUMN P_STREET VARCHAR(100);

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RMD_TRNMAIN_ADDITIONALINFO' AND COLUMN_NAME = 'isUpdatedParty' )
ALTER TABLE RMD_TRNMAIN_ADDITIONALINFO ADD isUpdatedParty bit default (0) with values;

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'ITEMTYPE' AND TABLE_NAME = 'PURPROD_NONTRADING' AND CHARACTER_MAXIMUM_LENGTH < 25)
ALTER TABLE PURPROD_NONTRADING ALTER COLUMN ITEMTYPE VARCHAR(25) 

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'ITEMTYPE' AND TABLE_NAME = 'LOGPROD' AND CHARACTER_MAXIMUM_LENGTH < 25)
ALTER TABLE LOGPROD ALTER COLUMN ITEMTYPE VARCHAR(25) 

IF EXISTS (SELECT * FROM information_schema.tables where table_name = 'AOPMAIN') if not exists (select 1 from information_schema.columns where table_name = 'AOPMAIN' and column_name = 'DATA_ORIGIN' ) alter table AOPMAIN add DATA_ORIGIN varchar(100) else if exists (select 1 from information_schema.columns where table_name = 'AOPMAIN' and column_name = 'DATA_ORIGIN' and CHARACTER_MAXIMUM_LENGTH < 100) alter table AOPMAIN alter column DATA_ORIGIN varchar(100)

IF EXISTS (SELECT * FROM information_schema.tables where table_name = 'PURMAIN') if not exists (select 1 from information_schema.columns where table_name = 'PURMAIN' and column_name = 'DATA_ORIGIN' ) alter table PURMAIN add DATA_ORIGIN varchar(100) else if exists (select 1 from information_schema.columns where table_name = 'PURMAIN' and column_name = 'DATA_ORIGIN' and CHARACTER_MAXIMUM_LENGTH < 100) alter table PURMAIN alter column DATA_ORIGIN varchar(100)

IF EXISTS (SELECT * FROM information_schema.tables where table_name = 'PREMAIN') if not exists (select 1 from information_schema.columns where table_name = 'PREMAIN' and column_name = 'DATA_ORIGIN' ) alter table PREMAIN add DATA_ORIGIN varchar(100) else if exists (select 1 from information_schema.columns where table_name = 'PREMAIN' and column_name = 'DATA_ORIGIN' and CHARACTER_MAXIMUM_LENGTH < 100) alter table PREMAIN alter column DATA_ORIGIN varchar(100)

IF EXISTS (SELECT * FROM information_schema.tables where table_name = 'GRNMAIN') if not exists (select 1 from information_schema.columns where table_name = 'GRNMAIN' and column_name = 'DATA_ORIGIN' ) alter table GRNMAIN add DATA_ORIGIN varchar(100) else if exists (select 1 from information_schema.columns where table_name = 'GRNMAIN' and column_name = 'DATA_ORIGIN' and CHARACTER_MAXIMUM_LENGTH < 100) alter table GRNMAIN alter column DATA_ORIGIN varchar(100)

IF EXISTS (SELECT * FROM information_schema.tables where table_name = 'OPMAIN') if not exists (select 1 from information_schema.columns where table_name = 'OPMAIN' and column_name = 'DATA_ORIGIN' ) alter table OPMAIN add DATA_ORIGIN varchar(100) else if exists (select 1 from information_schema.columns where table_name = 'OPMAIN' and column_name = 'DATA_ORIGIN' and CHARACTER_MAXIMUM_LENGTH < 100) alter table OPMAIN alter column DATA_ORIGIN varchar(100)

IF EXISTS (SELECT * FROM information_schema.tables where table_name = 'INVMAIN') if not exists (select 1 from information_schema.columns where table_name = 'INVMAIN' and column_name = 'DATA_ORIGIN' ) alter table INVMAIN add DATA_ORIGIN varchar(100) else if exists (select 1 from information_schema.columns where table_name = 'INVMAIN' and column_name = 'DATA_ORIGIN' and CHARACTER_MAXIMUM_LENGTH < 100) alter table INVMAIN alter column DATA_ORIGIN varchar(100)

IF EXISTS (SELECT * FROM information_schema.tables where table_name = 'TRNMAIN') if not exists (select 1 from information_schema.columns where table_name = 'TRNMAIN' and column_name = 'DATA_ORIGIN' ) alter table TRNMAIN add DATA_ORIGIN varchar(100) else if exists (select 1 from information_schema.columns where table_name = 'TRNMAIN' and column_name = 'DATA_ORIGIN' and CHARACTER_MAXIMUM_LENGTH < 100) alter table TRNMAIN alter column DATA_ORIGIN varchar(100)

IF EXISTS (SELECT * FROM information_schema.tables where table_name = 'RMD_ORDERMAIN') if not exists (select 1 from information_schema.columns where table_name = 'RMD_ORDERMAIN' and column_name = 'DATA_ORIGIN' ) alter table RMD_ORDERMAIN add DATA_ORIGIN varchar(100) else if exists (select 1 from information_schema.columns where table_name = 'RMD_ORDERMAIN' and column_name = 'DATA_ORIGIN' and CHARACTER_MAXIMUM_LENGTH < 100) alter table RMD_ORDERMAIN alter column DATA_ORIGIN varchar(100)

IF EXISTS (SELECT * FROM information_schema.tables where table_name = 'LOGMAIN') if not exists (select 1 from information_schema.columns where table_name = 'LOGMAIN' and column_name = 'DATA_ORIGIN' ) alter table LOGMAIN add DATA_ORIGIN varchar(100) else if exists (select 1 from information_schema.columns where table_name = 'LOGMAIN' and column_name = 'DATA_ORIGIN' and CHARACTER_MAXIMUM_LENGTH < 100) alter table LOGMAIN alter column DATA_ORIGIN varchar(100)

IF EXISTS (SELECT * FROM information_schema.tables where table_name = 'LOGMAIN_ORDER') if not exists (select 1 from information_schema.columns where table_name = 'LOGMAIN_ORDER' and column_name = 'DATA_ORIGIN' ) alter table LOGMAIN_ORDER add DATA_ORIGIN varchar(100) else if exists (select 1 from information_schema.columns where table_name = 'LOGMAIN_ORDER' and column_name = 'DATA_ORIGIN' and CHARACTER_MAXIMUM_LENGTH < 100) alter table LOGMAIN_ORDER alter column DATA_ORIGIN varchar(100)

IF EXISTS (SELECT * FROM information_schema.tables where table_name = 'INVMAIN_TMP') if not exists (select 1 from information_schema.columns where table_name = 'INVMAIN_TMP' and column_name = 'DATA_ORIGIN' ) alter table INVMAIN_TMP add DATA_ORIGIN varchar(100) else if exists (select 1 from information_schema.columns where table_name = 'INVMAIN_TMP' and column_name = 'DATA_ORIGIN' and CHARACTER_MAXIMUM_LENGTH < 100) alter table INVMAIN_TMP alter column DATA_ORIGIN varchar(100)

IF EXISTS (SELECT * FROM information_schema.tables where table_name = 'ABBMAIN') if not exists (select 1 from information_schema.columns where table_name = 'ABBMAIN' and column_name = 'DATA_ORIGIN' ) alter table ABBMAIN add DATA_ORIGIN varchar(100) else if exists (select 1 from information_schema.columns where table_name = 'ABBMAIN' and column_name = 'DATA_ORIGIN' and CHARACTER_MAXIMUM_LENGTH < 100) alter table ABBMAIN alter column DATA_ORIGIN varchar(100)

IF EXISTS (SELECT * FROM information_schema.tables where table_name = 'ACCMAIN') if not exists (select 1 from information_schema.columns where table_name = 'ACCMAIN' and column_name = 'DATA_ORIGIN' ) alter table ACCMAIN add DATA_ORIGIN varchar(100) else if exists (select 1 from information_schema.columns where table_name = 'ACCMAIN' and column_name = 'DATA_ORIGIN' and CHARACTER_MAXIMUM_LENGTH < 100) alter table ACCMAIN alter column DATA_ORIGIN varchar(100)

IF EXISTS (SELECT * FROM information_schema.tables where table_name = 'RMD_TRNMAIN_ADDITIONALINFO') if not exists (select 1 from information_schema.columns where table_name = 'RMD_TRNMAIN_ADDITIONALINFO' and column_name = 'DATAORIGIN' ) alter table RMD_TRNMAIN_ADDITIONALINFO add DATAORIGIN varchar(100) else if exists (select 1 from information_schema.columns where table_name = 'RMD_TRNMAIN_ADDITIONALINFO' and column_name = 'DATAORIGIN' and CHARACTER_MAXIMUM_LENGTH < 100) alter table RMD_TRNMAIN_ADDITIONALINFO alter column DATAORIGIN varchar(100)

IF EXISTS (SELECT * FROM information_schema.tables where table_name = 'REQUISITION_ORDERMAIN') if not exists (select 1 from information_schema.columns where table_name = 'REQUISITION_ORDERMAIN' and column_name = 'DATA_ORIGIN' ) alter table REQUISITION_ORDERMAIN add DATA_ORIGIN varchar(100) else if exists (select 1 from information_schema.columns where table_name = 'REQUISITION_ORDERMAIN' and column_name = 'DATA_ORIGIN' and CHARACTER_MAXIMUM_LENGTH < 100) alter table REQUISITION_ORDERMAIN alter column DATA_ORIGIN varchar(100)



IF EXISTS (SELECT * FROM information_schema.tables where table_name = 'QUOTATION_MAIN') if not exists (select 1 from information_schema.columns where table_name = 'QUOTATION_MAIN' and column_name = 'DATA_ORIGIN' ) alter table QUOTATION_MAIN add DATA_ORIGIN varchar(100) else if exists (select 1 from information_schema.columns where table_name = 'QUOTATION_MAIN' and column_name = 'DATA_ORIGIN' and CHARACTER_MAXIMUM_LENGTH < 100) alter table QUOTATION_MAIN alter column DATA_ORIGIN varchar(100)

*/